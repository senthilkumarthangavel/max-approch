{"version":3,"sources":["components/banner.jsx","components/question.jsx","components/submission.jsx","components/hint.jsx","components/explain.jsx","components/elaborate.jsx","components/explore.jsx","components/loadcontent.jsx","components/workspacer.jsx","components/pollOption.jsx","components/answer.jsx","App.js","serviceWorker.js","index.js"],"names":["Banner","Question","question","Submission","props","className","Button","variant","Hint","Explain","Elaborate","videoId","autoPlay","fluid","width","height","src","type","position","autoHide","order","applySuperscriptAsPower","mjs","mathJson","config","result","undefined","sup","window","math","expression","node","FunctionNode","mathJsonToMathjs","getMathjsArgs","Array","isArray","arg","index","length","push","num","n","number","bignumber","ConstantNode","sym","BUILT_IN_CONSTANTS","π","pi","τ","tau","ℯ","e","ⅇ","ϕ","phi","ⅈ","i","ⅉ","symbol","op","lhs","rhs","args","OperatorNode","mod","fn","sub","getMathjsArgsWithSub","SymbolNode","fnName","randomReal","randomInteger","Gamma","Re","Im","binom","ucorner","lcorner","arccos","arcsin","arctan","arcosh","arsinh","group","MultiMath","React","useState","count","setCount","handleChange","target","console","log","mathField","MathLive","makeMathField","$setConfig","virtualKeyboardMode","virtualKeyboards","onContentDidChange","mathfield","ast","latexToAST","$text","document","getElementById","innerHTML","JSON","stringify","eval","onClick","counter","concat","map","key","id","LoadContent","WorkSpace","state","plusopen","inputValue","defaultContent","handlePlus","bind","this","setState","previousProps","previousState","value","Number","k","Tabs","activeKey","onSelect","setKey","Tab","eventKey","title","Component","PollOption","options","onChange","selectedValue","choice","name","checked","label","Answer","selectedOption","val","answer","url","handleOnChange","App","collapseOpen","exploreOpen","handleHint","handleExplore","handleInput","data","Container","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iQAMeA,EAJC,WACf,OAAS,mFCGKC,EAJE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnB,OAAS,4BAAKA,I,QCOCC,EAPK,SAACC,GAEpB,OAAS,yBAAKC,UAAW,UACtB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAhB,Y,kBCkBWC,EAtBF,WACT,OACI,6BAEI,oCACD,uDACA,wIAEX,kGACA,sCACA,sKAEA,mKAEA,8GACA,8KCAeC,G,aAfC,WAChB,OACA,6BACA,sHAGA,wHAEA,mIAEI,kE,QCRW,SAASC,IACtB,OACE,yBAAKL,UAAW,cAChB,kBAAC,SAAD,CAAQM,QAAQ,UAAUC,UAAQ,EAACC,OAAO,EAAOC,MAAO,IAAKC,OAAQ,KACnE,4BACEC,IAAI,2DACJC,KAAK,cAEN,kBAAC,gBAAD,CAAeC,SAAS,WACzB,kBAAC,aAAD,CAAYC,UAAU,GACpB,kBAAC,sBAAD,CAAqBC,MAAO,O,6BCgDpC,SAASC,EAAwBC,EAAKC,EAAUC,GAC5C,IAAIC,EAASH,EAUb,MARwB,kBAAbC,QACUG,IAAjBH,EAASI,MAETF,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKC,aACrC,MACA,CAACP,EAAQQ,EAAiBV,EAASI,IAAKH,MAGzCC,EAGX,SAASS,EAAcX,EAAUC,GAC7B,IAAIC,EAAS,GACb,GAAIU,MAAMC,QAAQb,EAASc,KACvB,IACI,IAAIC,EAAQ,EACZA,EAAQf,EAASc,IAAIE,OACrBD,IAEAb,EAAOe,KACHP,EAAiBV,EAASc,IAAIC,GAAQd,SAI9CC,EAAS,CAACQ,EAAiBV,EAASc,IAAKb,IAE7C,OAAOC,EAmBX,SAASQ,EAAiBV,EAAUC,GAChC,IAAIC,EACJ,QAAiBC,IAAbH,EAAJ,CAEA,GACwB,kBAAbA,QACUG,IAAjBH,EAASkB,IACX,CACE,IAAIC,EACoB,kBAAbnB,EACDA,EACAA,EAASkB,IAGG,cAAlBjB,EAAOmB,SACPD,EAAId,OAAOC,KAAKe,UAAUF,IAO9BjB,EAASJ,EALTI,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKc,aACrCH,GAMAnB,EACAC,QAED,GACiB,kBAAbD,QACUG,IAAjBH,EAASuB,IACX,CACE,IAAMC,EAAqB,CACvBC,SAAGpB,OAAOC,KAAKoB,GACfC,SAAGtB,OAAOC,KAAKsB,IACfC,SAAGxB,OAAOC,KAAKwB,EACfC,SAAG1B,OAAOC,KAAKwB,EACfA,EAAGzB,OAAOC,KAAKwB,EACfE,SAAG3B,OAAOC,KAAK2B,IACfC,SAAG7B,OAAOC,KAAK6B,EACfC,SAAG/B,OAAOC,KAAK6B,EACfA,EAAG9B,OAAOC,KAAK6B,GAEbE,EACkB,kBAAbrC,EACDA,EACAA,EAASuB,IACfC,EAAmBa,KACnBnC,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKc,aACrCE,EAAmBa,KAG3BnC,EAASJ,EACLI,EACAF,EACAC,QAED,QAAoBE,IAAhBH,EAASsC,IAChB,QACqBnC,IAAjBH,EAASuC,UACQpC,IAAjBH,EAASwC,IACX,CACE,IAUMC,EAAO,CACT/B,EAAiBV,EAASuC,IAAKtC,GAC/BS,EAAiBV,EAASwC,IAAKvC,IAEnCC,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKkC,aACrC1C,EAASsC,GAfc,CACvB,IAAK,MACL,IAAK,WACL,IAAK,WACL,IAAK,SAGL,IAAK,MACLK,IAAK,OAQc3C,EAASsC,IAC5BG,QAED,QAAqBtC,IAAjBH,EAASwC,IAAmB,CAOnCtC,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKkC,aACrC1C,EAASsC,GAPoB,CAC7B,IAAK,aACL,IAAK,aAMoBtC,EAASsC,IAClC,CAAC5B,EAAiBV,EAASwC,IAAKvC,WAGrC,GAAID,EAAS4C,GAChB,GACoB,QAAhB5C,EAAS4C,IACQ,OAAhB5C,EAAS4C,SACczC,IAApBH,EAAS4C,GAAGC,IAEhB3C,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKC,aACrC,MAjHhB,SAA8BT,EAAUC,GACpC,IAAMC,EAASS,EAAcX,EAAUC,GAKvC,YAJqBE,IAAjBH,EAAS6C,KACT3C,EAAOe,KAAKP,EAAiBV,EAAS6C,IAAK5C,IAGxCC,EA4GK4C,CAAqB9C,EAAUC,SAEhC,GAAoB,OAAhBD,EAAS4C,GAAa,CAC7B,IAAMH,EAAO9B,EAAcX,EAAUC,GACrCwC,EAAKxB,KACD,IAAIZ,OAAOC,KAAKC,WAAWC,KAAKc,aAC5BjB,OAAOC,KAAKe,UAAU,KAG9BnB,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKC,aACrC,MACAgC,QAED,GAAoB,OAAhBzC,EAAS4C,GAChB1C,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKC,aACrC,IAAIJ,OAAOC,KAAKC,WAAWC,KAAKuC,WAC5B,SAEJpC,EAAcX,EAAUC,QAEzB,CACH,IAAM+C,EACF,CACI,IAAK,MACL,IAAK,WACL,IAAK,WACL,IAAK,SACLC,WAAY,SACZC,cAAe,YACfC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,MAAO,cACPC,QAAS,OACTC,QAAS,QACTC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,QACRC,OAAQ,kBACV7D,EAAS4C,KAAO5C,EAAS4C,GAE/B1C,EAAS,IAAIG,OAAOC,KAAKC,WAAWC,KAAKC,aACrCuC,EACArC,EAAcX,EAAUC,SAGzBD,EAAS8D,QAChB5D,EAASJ,EACLY,EAAiBV,EAAS8D,MAAO7D,GACjCD,EACAC,IAIR,OAAOC,GAGI6D,MAxQG,WAAO,IAAD,EACMC,IAAMC,SAAS,CAAC,IADtB,mBACbC,EADa,KACNC,EADM,KAIjBC,EAAc,SAACtC,GACf,IAAMuC,EAASvC,EAAEuC,OAEjB,GADAC,QAAQC,IAAI,SAAUF,GAClBA,EAAQ,CACXC,QAAQC,IAAI,SAAUF,GACxB,IAAMG,EAAYC,IAASC,cAAcL,GACzCC,QAAQC,IAAI,YAAaC,GAEzBA,EAAUG,WAAW,CACnBC,oBAAqB,UACrBC,iBAAkB,MAClBC,mBAAoB,SAAAC,GAClB,IACI,IAAMC,EAAMP,IAASQ,WAAWF,EAAUG,SAC1CC,SAASC,eACL,UACFC,UAAYC,KAAKC,UACf7E,EAAiBsE,EAAK,IAAIQ,QAGhC,MAAO1D,GACLqD,SAASC,eAAe,UAAUC,UAAY,qBAexD,OACE,yBAAKvG,UAAU,OACb,4BAAQA,UAAU,gBAClB,4BAAQ2G,QATQ,WAChB,IAAIC,EAAUxB,EAAMyB,OAAO,CAAC,KAC5BxB,EAASuB,GACTpB,QAAQC,IAAIL,IAMkBpF,UAAU,mBAAxC,QACCoF,EAAM0B,KAAI,SAACjH,EAAUoC,GAAX,OACT,yBAAK8E,IAAK9E,GACV,0BAAM0E,QAAUrB,EAActF,UAAU,iBAIzC,yBAAKgH,GAAG,cCxCFC,EAbK,WAChB,OACQ,yBAAKjH,UAAW,eACZ,yCACI,wDACA,sIAEG,qGC2FRkH,E,kDAvFb,WAAYnH,GAAO,IAAD,8BACd,cAAMA,IACDoH,MAAM,CACTC,UAAU,EACVC,WAAW,GACXN,IAAK,GACLO,gBAAgB,GAGlB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBATJ,E,gEAalBC,KAAKC,SAAS,CACZJ,gBAAgB,M,yCAIDK,EAAeC,GAC5BA,EAAcb,MAAQU,KAAKN,MAAMJ,KACjCU,KAAKC,SAAS,CACZJ,gBAAgB,M,mCAMpBG,KAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBC,UAAWD,EAAMC,e,kCAITpE,GACV,IAAIqE,EAAarE,EAAEuC,OAAOsC,MAEfC,OAAOT,IAGZI,KAAKC,SAAL,eACK1E,EAAEuC,OAAOsC,MAAQR,M,6BAIvBU,GACLN,KAAKC,SAAS,CACZX,IAAKgB,M,+BAIE,IAAD,SAC+BN,KAAKN,MAAvBG,GADb,EACCD,WADD,EACaC,gBAEjB,OAEE,yBAAKtH,UAAW,WAEd,kBAACgI,EAAA,EAAD,CAAMhB,GAAG,yBAAyBiB,UAAWR,KAAKN,MAAMJ,IAAMmB,SAAU,SAACH,GAAD,OAAO,EAAKI,OAAOJ,KACvF,kBAACK,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,QACtB,kBAAC,EAAD,OAEL,kBAACF,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,WACzB,kBAAC,EAAD,CAAWf,WAAYE,KAAKF,cAEjC,kBAACa,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,WAC1B,kBAAC,EAAD,OAEJ,kBAACF,EAAA,EAAD,CAAKC,SAAS,YAAYC,MAAM,aAC5B,kBAACjI,EAAD,OAIJ,kBAAC+H,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,aAE/B,kBAACF,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,aAE/B,kBAACF,EAAA,EAAD,CAAKC,SAAS,kBAAkBC,MAAM,qBAKxChB,EAAkB,kBAAC,EAAD,MAAkB,Q,GAlF1BiB,a,QCYTC,EArBI,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,cAEtC,OACE,yBAAK3I,UAAU,cAEZyI,EAAQ3B,KAAI,SAAC8B,EAAQ3G,GAAT,OACZ,8BAAM,2BAAO8E,IAAK9E,GACjB,2BAAOrB,KAAK,QACJiI,KAAK,OACLhB,MAAOe,EAAO5B,GACdD,IAAK9E,EACL6G,QAASH,IAAkBC,EAAO5B,GAClC0B,SAAU,SAAC1F,GAAD,OAAO0F,EAAS1F,EAAEuC,OAAOsC,UAClCe,EAAOG,aCiBTC,E,kDA1BX,WAAYjJ,GAAO,IAAD,8BACd,cAAMA,IACDoH,MAAQ,CAAC8B,eAAe,IAFf,E,2DAKHC,GAEXzB,KAAKC,SAAS,CACVuB,eAAgBC,M,+BAGf,IAAD,OACEC,EAASC,EAAID,OAEnB,OACI,yBAAKnJ,UAAW,eACZ,kBAAC,EAAD,CACAyI,QAASU,EACTT,SAAU,SAACQ,GAAD,OAAQ,EAAKG,eAAeH,IACtCP,cAAelB,KAAKN,MAAM8B,sB,GArBrBV,a,iBC4FNe,E,kDAlFb,WAAYvJ,GAAO,IAAD,8BAChB,cAAMA,IACDoH,MAAQ,CAETtH,SAAU,GACV0J,cAAc,EACdC,aAAa,EACb5C,QAAS,EACTS,WAAW,GACXD,UAAU,GAGd,EAAKqC,WAAa,EAAKA,WAAWjC,KAAhB,gBAClB,EAAKkC,cAAgB,EAAKA,cAAclC,KAAnB,gBACrB,EAAKD,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKmC,YAAc,EAAKA,YAAYnC,KAAjB,gBAfH,E,gMAqBG4B,EAAIQ,K,OAAjBA,E,OAGNnC,KAAKC,SAAS,CAAC7H,SAAU+J,EAAK/J,W,yIAIhC4H,KAAKC,UAAS,SAAAP,GAAK,MAAK,CACpBoC,cAAepC,EAAMoC,mB,sCAKzB9B,KAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBqC,aAAcrC,EAAMqC,kB,mCAKtB/B,KAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBC,UAAWD,EAAMC,e,kCAITpE,GACV,IAAIqE,EAAarE,EAAEuC,OAAOsC,MAEfC,OAAOT,IAGZI,KAAKC,SAAL,eACK1E,EAAEuC,OAAOsC,MAAQR,M,+BAKnB,IAAD,EACiDI,KAAKN,MAAtDtH,EADA,EACAA,SADA,EACU0J,aADV,EACyBC,YADzB,EACsC5C,QAC5C,OACE,yBAAK5G,UAAU,OACf,kBAAC6J,EAAA,EAAD,KACE,yBAAK7J,UAAW,WAChB,yBAAKA,UAAW,iBAAkBS,MAAO,QAAQ,kBAAC,EAAD,OAEjD,yBAAKT,UAAW,eAChB,yBAAKA,UAAW,eAAiBS,MAAO,QAAxC,IAAiD,kBAAC,EAAD,CAAUZ,SAAUA,IAArE,KACC,kBAAC,EAAD,MACA,kBAAE,EAAF,OAGF,kBAAC,EAAD,MACD,yBAAKG,UAAW,UAAhB,4C,GAzEYuI,a,OCDEuB,QACW,cAA7BvI,OAAOwI,SAASC,UAEe,UAA7BzI,OAAOwI,SAASC,UAEhBzI,OAAOwI,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/D,SAASC,eAAe,SDwHpB,kBAAmB+D,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpF,QAAQoF,MAAMA,EAAMC,a","file":"static/js/main.1aa01301.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n const Banner = () => {\r\n return ( <h3>Assess@Home Online Educational Assessment Platform</h3> )\r\n};\r\n\r\nexport default Banner;","import React from 'react';\r\n\r\nconst Question = ({question}) => {\r\nreturn ( <h4>{question}</h4> )\r\n};\r\n\r\nexport default Question;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n const Submission = (props) => {\r\n\r\n return ( <div className={'Submit'}>{\r\n    <Button variant=\"primary\">Submit</Button>\r\n     }</div> )\r\n};\r\n\r\nexport default Submission;","import React, { Component } from 'react';\r\n\r\nconst Hint = () => {\r\n    return(\r\n        <div>\r\n           \r\n            <h5>Hint</h5>\r\n           <h5>Euclid&#39;s Division Lemma</h5> \r\n           <p>&quot;Given positive integers a and b, there exist unique integers q and r satisfying a = bq +\r\nr, 0 &lt;= r &lt;= b&quot;</p>\r\n<h6>Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)</h6>\r\n<h6>Steps:</h6>\r\n<p>1. For this scenario, take two of the given numbers, divide the greater by the smaller and then\r\ndivide the divisor by the reminder. </p>\r\n<p>2. Now again divide the divisor of this division by the next remainder found and repeat this\r\nmethod until the remainder is zero. </p>\r\n<p>3. The last divisor that is found will be the HCF of the two numbers asked. </p>\r\n<p>4. If there are three numbers given and you need to find the HCF of three numbers then find the\r\nHCF of this two numbers and the third number.</p>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hint;","import React from 'react';\r\n\r\nconst Explain = () => {\r\nreturn ( \r\n<div>\r\n<p>\r\n    Treat the smallest number i.e., as divisor (b) and bigger number i.e., as dividend (a).</p>\r\n    \r\n<p>Apply Euclid's division lemma, to a and b.  So, we find whole numbers, q and r such that </p>\r\n\r\n<p>If r = 0, b is the HCF of a and b. If r ≠ 0, apply the division lemma to b and r using \r\n    step 1. </p>\r\n    <p>Repeat Step 3 till the r is zero</p>\r\n    </div>\r\n )\r\n};\r\n\r\nexport default Explain;","import React from 'react';\r\n\r\nimport { Player, ControlBar, ClosedCaptionButton, BigPlayButton  } from 'video-react';\r\n\r\nexport default function Elaborate() {\r\n  return (\r\n    <div className={'video-wrap'}>\r\n    <Player videoId=\"video-1\" autoPlay fluid={false} width={700} height={300}>\r\n      <source\r\n        src=\"//d2zihajmogu5jn.cloudfront.net/elephantsdream/ed_hd.mp4\"\r\n        type=\"video/mp4\" \r\n      />\r\n       <BigPlayButton position=\"center\" />\r\n      <ControlBar autoHide={false}>\r\n        <ClosedCaptionButton order={7} />\r\n      </ControlBar>\r\n    </Player>\r\n    </div>\r\n    );\r\n  };\r\n\r\n","import React from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\nimport{ useState, useEffect, useRef } from 'react';\r\n\r\nconst MultiMath = () => {\r\n    const [count, setCount] = React.useState([1]);\r\n  \r\n\r\n const handleChange= (e) => {\r\n       const target = e.target;\r\n       console.log('target', target);\r\n       if (target) {\r\n        console.log('target', target);\r\n      const mathField = MathLive.makeMathField(target);\r\n      console.log('mathField', mathField);\r\n\r\n      mathField.$setConfig({\r\n        virtualKeyboardMode: 'onfocus',\r\n        virtualKeyboards: 'all',\r\n        onContentDidChange: mathfield => {\r\n          try {\r\n              const ast = MathLive.latexToAST(mathfield.$text());\r\n              document.getElementById(\r\n                  'output'\r\n              ).innerHTML = JSON.stringify(\r\n                  mathJsonToMathjs(ast, {}).eval()\r\n              );\r\n              // document.getElementById('output').innerHTML = JSON.stringify(ast);\r\n          } catch (e) {\r\n              document.getElementById('output').innerHTML = '😕';\r\n          }\r\n        },\r\n      })\r\n    }\r\n    }\r\n\r\n\r\n\r\n    const addQuestion = () =>{\r\n        let counter = count.concat([''])\r\n        setCount(counter)\r\n        console.log(count)\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"explore-wrap\">\r\n        <button onClick={addQuestion} className=\"btn btn-primary\">Plus</button>\r\n        {count.map((question, index) => (\r\n          <div key={index}>\r\n          <span onClick={ handleChange} className=\"fieldset\"></span>\r\n          </div>\r\n           ))}\r\n     \r\n         <pre id=\"output\"></pre>\r\n        \r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n  \r\nfunction applySuperscriptAsPower(mjs, mathJson, config) {\r\n    let result = mjs;\r\n    if (\r\n        typeof mathJson === 'object' &&\r\n        mathJson.sup !== undefined\r\n    ) {\r\n        result = new window.math.expression.node.FunctionNode(\r\n            'pow',\r\n            [result, mathJsonToMathjs(mathJson.sup, config)]\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getMathjsArgs(mathJson, config) {\r\n    let result = [];\r\n    if (Array.isArray(mathJson.arg)) {\r\n        for (\r\n            let index = 0;\r\n            index < mathJson.arg.length;\r\n            index++\r\n        ) {\r\n            result.push(\r\n                mathJsonToMathjs(mathJson.arg[index], config)\r\n            );\r\n        }\r\n    } else {\r\n        result = [mathJsonToMathjs(mathJson.arg, config)];\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return an array of arguments, with the sub if present as the last argument.\r\n */\r\nfunction getMathjsArgsWithSub(mathJson, config) {\r\n    const result = getMathjsArgs(mathJson, config);\r\n    if (mathJson.sub !== undefined) {\r\n        result.push(mathJsonToMathjs(mathJson.sub, config));\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return a mathjs node tree corresponding to the MathjSON object\r\n * @param {Object.<string,any>} mathJson\r\n */\r\nfunction mathJsonToMathjs(mathJson, config) {\r\n    let result;\r\n    if (mathJson === undefined) return undefined;\r\n\r\n    if (\r\n        typeof mathJson === 'number' ||\r\n        mathJson.num !== undefined\r\n    ) {\r\n        let n =\r\n            typeof mathJson === 'number'\r\n                ? mathJson\r\n                : mathJson.num;\r\n\r\n        // Convert to BigNum if required\r\n        if (config.number === 'BigNumber')\r\n            n = window.math.bignumber(n);\r\n\r\n        result = new window.math.expression.node.ConstantNode(\r\n            n\r\n        );\r\n\r\n        // Apply the superscript as an operation\r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (\r\n        typeof mathJson === 'string' ||\r\n        mathJson.sym !== undefined\r\n    ) {\r\n        const BUILT_IN_CONSTANTS = {\r\n            π: window.math.pi,\r\n            τ: window.math.tau, // GREEK SMALL LETTER TAU\r\n            ℯ: window.math.e, // ℯ SCRIPT SMALL E\r\n            ⅇ: window.math.e, // ⅇ DOUBLE-STRUCK ITALIC SMALL E\r\n            e: window.math.e,\r\n            ϕ: window.math.phi, //  GREEK SMALL LETTER PHI\r\n            ⅈ: window.math.i, // ⅈ DOUBLE-STRUCK ITALIC SMALL I\r\n            ⅉ: window.math.i, // ⅉ DOUBLE-STRUCK ITALIC SMALL J\r\n            i: window.math.i, //\r\n        };\r\n        const symbol =\r\n            typeof mathJson === 'string'\r\n                ? mathJson\r\n                : mathJson.sym;\r\n        if (BUILT_IN_CONSTANTS[symbol]) {\r\n            result = new window.math.expression.node.ConstantNode(\r\n                BUILT_IN_CONSTANTS[symbol]\r\n            );\r\n        } \r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (mathJson.op !== undefined) {\r\n        if (\r\n            mathJson.lhs !== undefined &&\r\n            mathJson.rhs !== undefined\r\n        ) {\r\n            const OPERATOR_FUNCTIONS = {\r\n                '+': 'add',\r\n                '-': 'subtract',\r\n                '*': 'multiply',\r\n                '/': 'divide',\r\n                // '.*': 'dotMultiply',\r\n                // './': 'dotDivide',\r\n                '%': 'mod',\r\n                mod: 'mod',\r\n            };\r\n            const args = [\r\n                mathJsonToMathjs(mathJson.lhs, config),\r\n                mathJsonToMathjs(mathJson.rhs, config),\r\n            ];\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                OPERATOR_FUNCTIONS[mathJson.op],\r\n                args\r\n            );\r\n        } else if (mathJson.rhs !== undefined) {\r\n            const UNARY_OPERATOR_FUNCTIONS = {\r\n                '-': 'unaryMinus',\r\n                '+': 'unaryPlus',\r\n                // '~': 'bitNot',\r\n                // 'not': 'not'\r\n            };\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                UNARY_OPERATOR_FUNCTIONS[mathJson.op],\r\n                [mathJsonToMathjs(mathJson.rhs, config)]\r\n            );\r\n        }\r\n    } else if (mathJson.fn) {\r\n        if (\r\n            mathJson.fn === 'log' ||\r\n            (mathJson.fn === 'ln' &&\r\n                mathJson.fn.sub !== undefined)\r\n        ) {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                getMathjsArgsWithSub(mathJson, config)\r\n            );\r\n        } else if (mathJson.fn === 'lb') {\r\n            const args = getMathjsArgs(mathJson, config);\r\n            args.push(\r\n                new window.math.expression.node.ConstantNode(\r\n                    window.math.bignumber(2)\r\n                )\r\n            );\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                args\r\n            );\r\n        } else if (mathJson.fn === 'lg') {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                new window.math.expression.node.SymbolNode(\r\n                    'log10'\r\n                ),\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        } else {\r\n            const fnName =\r\n                {\r\n                    '+': 'add',\r\n                    '-': 'subtract',\r\n                    '*': 'multiply',\r\n                    '/': 'divide',\r\n                    randomReal: 'random',\r\n                    randomInteger: 'randomInt',\r\n                    Gamma: 'gamma',\r\n                    Re: 're',\r\n                    Im: 'im',\r\n                    binom: 'composition',\r\n                    ucorner: 'ceil',\r\n                    lcorner: 'floor',\r\n                    arccos: 'acos',\r\n                    arcsin: 'asin',\r\n                    arctan: 'atan',\r\n                    arcosh: 'acosh',\r\n                    arsinh: '         asinh',\r\n                }[mathJson.fn] || mathJson.fn;\r\n\r\n            result = new window.math.expression.node.FunctionNode(\r\n                fnName,\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        }\r\n    } else if (mathJson.group) {\r\n        result = applySuperscriptAsPower(\r\n            mathJsonToMathjs(mathJson.group, config),\r\n            mathJson,\r\n            config\r\n        );\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport default MultiMath;","import React from 'react';\r\n\r\nconst LoadContent = () => {\r\n    return (\r\n            <div className={'loadContent'}>\r\n                <h5>Principle</h5>\r\n                    <h6>Euclid&#39;s Division Lemma:</h6>\r\n                    <p>Given positive integers a and b, there exist unique integers q and r satisfying a = bq +\r\n                        r, 0 &lt;= r &lt;= b</p>\r\n                       <h6> Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)</h6>\r\n                       \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default LoadContent;","import React, { Component } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Row, Col, Container, TabContainer, Tab, Tabs}  from 'react-bootstrap';\r\n\r\nimport Hint from './hint.jsx';\r\nimport Workspace from './workspace.jsx';\r\nimport Explain from './explain.jsx';\r\nimport Elaborate from './elaborate.jsx';\r\nimport MultiMath from './explore.jsx';\r\nimport LoadContent from './loadcontent.jsx';\r\n\r\nclass WorkSpace extends Component{\r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state={\r\n        plusopen: false,\r\n        inputValue:'',\r\n        key: '',\r\n        defaultContent: false\r\n      }\r\n\r\n      this.handlePlus = this.handlePlus.bind(this);\r\n  }\r\n\r\ncomponentDidMount(){\r\n  this.setState({\r\n    defaultContent: true\r\n  })\r\n}\r\n\r\ncomponentDidUpdate(previousProps, previousState) {\r\n  if (previousState.key !== this.state.key) {\r\n      this.setState({\r\n        defaultContent: false\r\n      })\r\n  }\r\n}\r\n\r\n  handlePlus(){\r\n    this.setState(state => ({\r\n      plusopen: !state.plusopen\r\n    }));\r\n  }\r\n\r\n  handleInput(e){\r\n    let inputValue = e.target.value;\r\n  \r\n          if (!Number(inputValue)) {\r\n              return;\r\n          }\r\n          this.setState({\r\n              [e.target.value]: inputValue\r\n          });\r\n  }\r\n\r\n  setKey(k){\r\n    this.setState({\r\n      key: k,\r\n    \r\n    })\r\n  }\r\n    render(){\r\n      const {inputValue, defaultContent} = this.state\r\n     \r\n        return(\r\n          \r\n          <div className={'wrkarea'}>\r\n              \r\n            <Tabs id=\"controlled-tab-example\" activeKey={this.state.key}  onSelect={(k) => this.setKey(k)}> \r\n                <Tab eventKey=\"hint\" title=\"Hint\">\r\n                     <Hint />\r\n                </Tab>\r\n                <Tab eventKey=\"explore\" title=\"Explore\">\r\n                     <MultiMath handlePlus={this.handlePlus} />\r\n                </Tab>\r\n                <Tab eventKey=\"explian\" title=\"Explian\" >\r\n                    <Explain />\r\n                </Tab>\r\n                <Tab eventKey=\"elaborate\" title=\"Elaborate\" >\r\n                    <Elaborate />\r\n                </Tab>\r\n           \r\n         \r\n                <Tab eventKey=\"Feedback\" title=\"FeedBack\">\r\n                  </Tab>\r\n                <Tab eventKey=\"Chatbots\" title=\"Chatbots\">\r\n                 </Tab>\r\n                <Tab eventKey=\"Ask the teacher\" title=\"Ask the teacher\" >\r\n                </Tab>\r\n              \r\n               \r\n                </Tabs>\r\n            { defaultContent ? (<LoadContent />): ''} \r\n          </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nexport default WorkSpace;","import React from 'react';\r\n\r\nconst PollOption = ({options, onChange, selectedValue}) => {\r\n\r\n  return (\r\n    <div className=\"pollOption\">\r\n       \r\n      {options.map((choice, index) => (\r\n       <span><label key={index}>\r\n        <input type=\"radio\" \r\n                name=\"vote\" \r\n                value={choice.id} \r\n                key={index}\r\n                checked={selectedValue === choice.id}\r\n                onChange={(e) => onChange(e.target.value)}/>\r\n                {choice.label}\r\n        </label></span> \r\n      ))}  \r\n    </div>\r\n   );\r\n};\r\n\r\n\r\nexport default PollOption;","import React, { Component } from 'react';\r\nimport url from '../api/index.json';\r\nimport PollOption from './pollOption.jsx';\r\n\r\nclass Answer extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {selectedOption:''}\r\n    }\r\n\r\n    handleOnChange(val){\r\n        \r\n        this.setState({\r\n            selectedOption: val\r\n        })\r\n    }\r\n    render(){\r\n        const answer = url.answer;\r\n  \r\n        return(\r\n            <div className={'answer-area'}>\r\n                <PollOption\r\n                options={answer}\r\n                onChange={(val)=> this.handleOnChange(val)}\r\n                selectedValue={this.state.selectedOption}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Answer;","import React, { Component } from 'react';\nimport Banner  from './components/banner.jsx';\nimport Question  from './components/question.jsx';\nimport Submission from './components/submission.jsx';\nimport WorkSpace from './components/workspacer.jsx';\nimport Answer from './components/answer.jsx';\nimport url from './api/index.json';\nimport './style/style.css';\nimport './style/video-react.css';\n//styles\nimport { Row, Col, Container }  from 'react-bootstrap'\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n       \n        question: '',\n        collapseOpen: false,\n        exploreOpen: false,\n        counter: 0,\n        inputValue:'',\n        plusopen: false,\n      \n    }\n    this.handleHint = this.handleHint.bind(this);\n    this.handleExplore = this.handleExplore.bind(this);\n    this.handlePlus = this.handlePlus.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  \n  }\n\n async componentDidMount(){\n\n    const data = await url.data;\n\n    //console.log('data', data);\n    this.setState({question: data.question })\n}\n\nhandleHint(){\n  this.setState(state => ({\n      collapseOpen: !state.collapseOpen\n    }));\n}\n\nhandleExplore(){\n  this.setState(state => ({\n    exploreOpen: !state.exploreOpen\n  }));\n}\n\nhandlePlus(){\n  this.setState(state => ({\n    plusopen: !state.plusopen\n  }));\n}\n\nhandleInput(e){\n  let inputValue = e.target.value;\n\n        if (!Number(inputValue)) {\n            return;\n        }\n        this.setState({\n            [e.target.value]: inputValue\n        });\n}\n\n\n  render(){\n   const {question, collapseOpen,  exploreOpen, counter} = this.state\n    return(\n      <div className=\"App\">\n      <Container>\n        <div className={'wrapper'}>\n        <div className={'banner-content'} width={'100%'}><Banner />\n        </div>\n        <div className={'wrapper inn'}>\n        <div className={'ques-content'}  width={'100%'}> <Question question={question}/> </div>\n         <WorkSpace />\n         < Answer />\n      </div>\n    \n       <Submission/>\n      <div className={'footer'}>@All Rights Reserved - KnowledgeQ</div>   \n      </div> \n      \n     </Container>\n     \n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/video-react.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}