{"ast":null,"code":"var _jsxFileName = \"D:\\\\Madhu\\\\approach\\\\src\\\\components\\\\explain.jsx\";\nimport React, { Component } from 'react';\n\nclass Explain extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, \"Use Euclid's division algorithm to find the HCF of 135 and 225 \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 1\n      }\n    }, \"Euclid's Division Lemma\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 1\n      }\n    }, \"\\\"Given positive integers a and b, there exist unique integers q and r satisfying a = bq + r, 0 <= r <= b\\\"\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 1\n      }\n    }, \"Note:\\xA0Dividend (a) = divisor (b) x quotient (q) + remainder (r)\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 1\n      }\n    }, \"Steps:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 1\n      }\n    }, \"1. Treat the smallest number i.e 135, as divisor (b) and bigger number i.e 225, as dividend (a)\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 1\n      }\n    }, \"2. Apply Euclid's division lemma, to a and b. So, we find whole number, q and r such that  a = bq + r, 0 <= r <= b\\\"\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 1\n      }\n    }, \"3. The last divisor that is found will be the HCF of the two numbers asked.\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 1\n      }\n    }, \"4. Repeat Step 3 till the r is Zero\"));\n  }\n\n}\n\nexport default Explain;\nvar Parent = React.createClass({\n  displayName: \"Parent\",\n  render: function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Parent\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"child-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Child, {\n      wait: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Child, {\n      wait: 5000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Child, {\n      wait: 4000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    })));\n  }\n});\nvar Child = React.createClass({\n  displayName: \"Child\",\n  getInitialState: function () {\n    return {\n      hidden: \"hidden\"\n    };\n  },\n  componentWillMount: function () {\n    var that = this;\n    setTimeout(function () {\n      that.show();\n    }, that.props.wait);\n  },\n  show: function () {\n    this.setState({\n      hidden: \"\"\n    });\n  },\n  render: function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"1. Treat the smallest number i.e 135, as divisor (b) and bigger number i.e 225, as dividend (a) - \", this.props.wait, \"ms\"));\n  }\n});\nReact.render( /*#__PURE__*/React.createElement(Parent, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }\n}), document.getElementById('react'));","map":{"version":3,"sources":["D:/Madhu/approach/src/components/explain.jsx"],"names":["React","Component","Explain","constructor","props","state","render","Parent","createClass","Child","getInitialState","hidden","componentWillMount","that","setTimeout","show","wait","setState","document","getElementById"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAELA,EAAAA,MAAM,GAAG;AAEL,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADA,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFI,eAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAHI,eAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EALI,eAOJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPI,eAQJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6GARI,eASJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kIATI,eAWJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAXI,eAYJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAZI,CADA;AAgBH;;AA1B8B;;AA6B/B,eAAeJ,OAAf;AAEA,IAAIK,MAAM,GAAGP,KAAK,CAACQ,WAAN,CAAkB;AAAA;AAC3BF,EAAAA,MAAM,EAAG,YAAY;AACjB,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACX,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,eAEX,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFW,eAGX,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHW,CAFJ,CADJ;AAUH;AAZ0B,CAAlB,CAAb;AAeA,IAAIG,KAAK,GAAGT,KAAK,CAACQ,WAAN,CAAkB;AAAA;AAC7BE,EAAAA,eAAe,EAAG,YAAY;AAC7B,WAAO;AAACC,MAAAA,MAAM,EAAG;AAAV,KAAP;AACA,GAH4B;AAI7BC,EAAAA,kBAAkB,EAAG,YAAY;AAC1B,QAAIC,IAAI,GAAG,IAAX;AACNC,IAAAA,UAAU,CAAC,YAAW;AACrBD,MAAAA,IAAI,CAACE,IAAL;AACA,KAFS,EAEPF,IAAI,CAACT,KAAL,CAAWY,IAFJ,CAAV;AAGA,GAT4B;AAU7BD,EAAAA,IAAI,EAAG,YAAY;AAClB,SAAKE,QAAL,CAAc;AAACN,MAAAA,MAAM,EAAG;AAAV,KAAd;AACA,GAZ4B;AAa1BL,EAAAA,MAAM,EAAG,YAAY;AACjB,wBACI;AAAK,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6GACuB,KAAKP,KAAL,CAAWY,IADlC,OADJ,CADJ;AAOH;AArByB,CAAlB,CAAZ;AAwBAhB,KAAK,CAACM,MAAN,eACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEY,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAFF","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass Explain extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            render: false\r\n        }\r\n    }\r\n \r\nrender() {\r\n     \r\n    return (\r\n    <div>\r\n    <h5>Use Euclid's division algorithm to find the HCF of 135 and 225 </h5>\r\n<h5>Euclid&#39;s Division Lemma</h5> \r\n<p>&quot;Given positive integers a and b, there exist unique integers q and r satisfying a = bq +\r\nr, 0 &lt;= r &lt;= b&quot;</p>\r\n<h6>Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)</h6>\r\n\r\n<h6>Steps:</h6>\r\n<p>1. Treat the smallest number i.e 135, as divisor (b) and bigger number i.e 225, as dividend (a) </p>\r\n<p>2. Apply Euclid's division lemma, to a and b. So, we find whole number, q and r such that  a = bq +\r\nr, 0 &lt;= r &lt;= b&quot; </p>\r\n<p>3. The last divisor that is found will be the HCF of the two numbers asked. </p>\r\n<p>4. Repeat Step 3 till the r is Zero</p>\r\n</div>\r\n    )\r\n}\r\n\r\n}\r\nexport default Explain;\r\n\r\nvar Parent = React.createClass({\r\n    render : function () {\r\n        return (\r\n            <div className=\"parent\">\r\n                <p>Parent</p>\r\n                <div className=\"child-list\">\r\n\t\t\t\t\t<Child wait={1000} />\r\n\t\t\t\t\t<Child wait={5000} />\r\n\t\t\t\t\t<Child wait={4000} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n});\r\n\r\nvar Child = React.createClass({\r\n\tgetInitialState : function () {\r\n\t\treturn({hidden : \"hidden\"});\r\n\t},\r\n\tcomponentWillMount : function () {\r\n        var that = this;\r\n\t\tsetTimeout(function() {\r\n\t\t\tthat.show();\r\n\t\t}, that.props.wait);\r\n\t},\r\n\tshow : function () {\r\n\t\tthis.setState({hidden : \"\"});\r\n\t},\r\n    render : function () {\r\n        return (\r\n            <div className={this.state.hidden}>\r\n                <p>1. Treat the smallest number i.e 135, as divisor (b) and bigger number i.e 225, \r\n                    as dividend (a) - {this.props.wait}ms</p>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n});\r\n\r\nReact.render(\r\n    <Parent />,\r\n  document.getElementById('react')\r\n);"]},"metadata":{},"sourceType":"module"}