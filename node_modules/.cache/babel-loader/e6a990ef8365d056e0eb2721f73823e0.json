{"ast":null,"code":"var _jsxFileName = \"D:\\\\Madhu\\\\approach\\\\src\\\\components\\\\explain.jsx\";\nimport React, { Component } from 'react';\nimport Child from './child.jsx';\n\nconst Explain = props => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 1\n  }\n}, \"Use Euclid's division algorithm to find the HCF of 135 and 225 \"), /*#__PURE__*/React.createElement(\"h5\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 1\n  }\n}, \"Euclid's Division Lemma\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 1\n  }\n}, \"\\\"Given positive integers a and b, there exist unique integers q and r satisfying a = bq + r, 0 <= r <= b\\\"\"), /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 1\n  }\n}, \"Note:\\xA0Dividend (a) = divisor (b) x quotient (q) + remainder (r)\"), /*#__PURE__*/React.createElement(Child, {\n  waitBeforeShow: 2000,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, \"1. Treat the smallest number i.e 135, as divisor (b) and bigger number i.e 225, as dividend (a)\\xA0\")), /*#__PURE__*/React.createElement(Child, {\n  waitBeforeShow: 4000,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, \"2. Apply Euclid's division lemma, to a and b. So, we find whole number, q and r such that  a = bq + r, 0 <= r <= b\\\"\\xA0\")), /*#__PURE__*/React.createElement(Child, {\n  waitBeforeShow: 7000,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, \"3. The last divisor that is found will be the HCF of the two numbers asked.\\xA0\")), /*#__PURE__*/React.createElement(Child, {\n  waitBeforeShow: 9000,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, \"4. Repeat Step 3 till the r is Zero\")));\n\nexport default Explain;","map":{"version":3,"sources":["D:/Madhu/approach/src/components/explain.jsx"],"names":["React","Component","Child","Explain","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADI,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFI,eAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAHI,eAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEALI,eAOA,oBAAC,KAAD;AAAO,EAAA,cAAc,EAAE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGADF,CAPA,eAUI,oBAAC,KAAD;AAAO,EAAA,cAAc,EAAE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8HADA,CAVJ,eAcA,oBAAC,KAAD;AAAO,EAAA,cAAc,EAAE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFADA,CAdA,eAiBA,oBAAC,KAAD;AAAO,EAAA,cAAc,EAAE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADA,CAjBA,CADJ;;AAwBA,eAAeD,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Child from './child.jsx';\r\n\r\nconst Explain = props => (\r\n    <div>\r\n<h5>Use Euclid's division algorithm to find the HCF of 135 and 225 </h5>\r\n<h5>Euclid&#39;s Division Lemma</h5> \r\n<p>&quot;Given positive integers a and b, there exist unique integers q and r satisfying a = bq +\r\nr, 0 &lt;= r &lt;= b&quot;</p>\r\n<h6>Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)</h6>\r\n\r\n    <Child waitBeforeShow={2000}>\r\n      <p>1. Treat the smallest number i.e 135, as divisor (b) and bigger number i.e 225, as dividend (a) </p>\r\n    </Child>\r\n        <Child waitBeforeShow={4000}>\r\n        <p>2. Apply Euclid's division lemma, to a and b. So, we find whole number, q and r such that  a = bq +\r\n        r, 0 &lt;= r &lt;= b&quot; </p>\r\n    </Child>\r\n    <Child waitBeforeShow={7000}>\r\n    <p>3. The last divisor that is found will be the HCF of the two numbers asked. </p>\r\n    </Child>\r\n    <Child waitBeforeShow={9000}>\r\n    <p>4. Repeat Step 3 till the r is Zero</p>\r\n    </Child>\r\n</div>\r\n)\r\n\r\nexport default Explain;\r\n\r\n"]},"metadata":{},"sourceType":"module"}