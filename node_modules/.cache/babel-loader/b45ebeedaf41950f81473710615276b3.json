{"ast":null,"code":"var _jsxFileName = \"D:\\\\Madhu\\\\approach\\\\src\\\\components\\\\explore.jsx\";\nimport React from 'react';\nimport { MathFieldComponent } from 'react-mathlive';\nimport MathLive from 'mathlive';\nimport { useState, useEffect, useRef } from 'react';\n\nconst MultiMath = () => {\n  const [count, setCount] = React.useState([1]);\n\n  const handleChange = e => {\n    const target = e.target;\n    console.log('target', target);\n\n    if (target) {\n      console.log('target', target);\n      const mathField = MathLive.makeMathField(target);\n      console.log('mathField', mathField);\n      mathField.$setConfig({\n        virtualKeyboardMode: 'onfocus',\n        virtualKeyboards: 'all',\n        onContentDidChange: mathfield => {\n          try {\n            const ast = MathLive.latexToAST(mathfield.$text());\n            document.getElementById('output').innerHTML = JSON.stringify(mathJsonToMathjs(ast, {}).eval()); // document.getElementById('output').innerHTML = JSON.stringify(ast);\n          } catch (e) {\n            document.getElementById('output').innerHTML = 'ðŸ˜•';\n          }\n        }\n      });\n    }\n  };\n\n  const addQuestion = () => {\n    let counter = count.concat(['']);\n    setCount(counter);\n    console.log(count);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"explore-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addQuestion,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Plus\"), count.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleChange,\n    className: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"pre\", {\n    id: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  })));\n};\n\nexport default MultiMath;","map":{"version":3,"sources":["D:/Madhu/approach/src/components/explore.jsx"],"names":["React","MathFieldComponent","MathLive","useState","useEffect","useRef","MultiMath","count","setCount","handleChange","e","target","console","log","mathField","makeMathField","$setConfig","virtualKeyboardMode","virtualKeyboards","onContentDidChange","mathfield","ast","latexToAST","$text","document","getElementById","innerHTML","JSON","stringify","mathJsonToMathjs","eval","addQuestion","counter","concat","map","question","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACG,QAAN,CAAe,CAAC,CAAD,CAAf,CAA1B;;AAGH,QAAMM,YAAY,GAAGC,CAAD,IAAO;AACrB,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,QAAIA,MAAJ,EAAY;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACF,YAAMG,SAAS,GAAGZ,QAAQ,CAACa,aAAT,CAAuBJ,MAAvB,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,SAAzB;AAEAA,MAAAA,SAAS,CAACE,UAAV,CAAqB;AACnBC,QAAAA,mBAAmB,EAAE,SADF;AAEnBC,QAAAA,gBAAgB,EAAE,KAFC;AAGnBC,QAAAA,kBAAkB,EAAEC,SAAS,IAAI;AAC/B,cAAI;AACA,kBAAMC,GAAG,GAAGnB,QAAQ,CAACoB,UAAT,CAAoBF,SAAS,CAACG,KAAV,EAApB,CAAZ;AACAC,YAAAA,QAAQ,CAACC,cAAT,CACI,QADJ,EAEEC,SAFF,GAEcC,IAAI,CAACC,SAAL,CACVC,gBAAgB,CAACR,GAAD,EAAM,EAAN,CAAhB,CAA0BS,IAA1B,EADU,CAFd,CAFA,CAOA;AACH,WARD,CAQE,OAAOpB,CAAP,EAAU;AACRc,YAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8C,IAA9C;AACH;AACF;AAfkB,OAArB;AAiBD;AACA,GA1BJ;;AA8BG,QAAMK,WAAW,GAAG,MAAK;AACrB,QAAIC,OAAO,GAAGzB,KAAK,CAAC0B,MAAN,CAAa,CAAC,EAAD,CAAb,CAAd;AACAzB,IAAAA,QAAQ,CAACwB,OAAD,CAAR;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,OAAO,EAAEwB,WAAjB;AAA8B,IAAA,SAAS,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECxB,KAAK,CAAC2B,GAAN,CAAU,CAACC,QAAD,EAAWC,KAAX,kBACT;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,OAAO,EAAG3B,YAAhB;AAA8B,IAAA,SAAS,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADD,CAFD,eAQC;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADF,CADF;AAeD,CAvDH;;AA2DA,eAAeH,SAAf","sourcesContent":["import React from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\nimport{ useState, useEffect, useRef } from 'react';\r\n\r\nconst MultiMath = () => {\r\n    const [count, setCount] = React.useState([1]);\r\n  \r\n\r\n const handleChange= (e) => {\r\n       const target = e.target;\r\n       console.log('target', target);\r\n       if (target) {\r\n        console.log('target', target);\r\n      const mathField = MathLive.makeMathField(target);\r\n      console.log('mathField', mathField);\r\n\r\n      mathField.$setConfig({\r\n        virtualKeyboardMode: 'onfocus',\r\n        virtualKeyboards: 'all',\r\n        onContentDidChange: mathfield => {\r\n          try {\r\n              const ast = MathLive.latexToAST(mathfield.$text());\r\n              document.getElementById(\r\n                  'output'\r\n              ).innerHTML = JSON.stringify(\r\n                  mathJsonToMathjs(ast, {}).eval()\r\n              );\r\n              // document.getElementById('output').innerHTML = JSON.stringify(ast);\r\n          } catch (e) {\r\n              document.getElementById('output').innerHTML = 'ðŸ˜•';\r\n          }\r\n        },\r\n      })\r\n    }\r\n    }\r\n\r\n\r\n\r\n    const addQuestion = () =>{\r\n        let counter = count.concat([''])\r\n        setCount(counter)\r\n        console.log(count)\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"explore-wrap\">\r\n        <button onClick={addQuestion} className=\"btn btn-primary\">Plus</button>\r\n        {count.map((question, index) => (\r\n          <div key={index}>\r\n          <span onClick={ handleChange} className=\"fieldset\"></span>\r\n          </div>\r\n           ))}\r\n     \r\n         <pre id=\"output\"></pre>\r\n        \r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n\r\nexport default MultiMath;"]},"metadata":{},"sourceType":"module"}