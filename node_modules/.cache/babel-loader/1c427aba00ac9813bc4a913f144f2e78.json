{"ast":null,"code":"var _jsxFileName = \"D:\\\\Madhu\\\\approach\\\\src\\\\components\\\\explore.jsx\";\nimport React, { Component } from 'react';\nimport { MathFieldComponent } from 'react-mathlive';\nimport MathLive from 'mathlive';\n\nclass MultiMath extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = () => e => {\n      const target = this.itemsRef.current;\n\n      if (target) {\n        const targete = MathLive.makeMathField(target, {\n          virtualKeyboardMode: 'onfocus',\n          virtualKeyboards: 'all',\n          onContentDidChange: target => {\n            try {\n              const ast = MathLive.latexToAST(targete.$text());\n              console.log('ast', ast);\n              document.getElementById('output').innerHTML = JSON.stringify(mathJsonToMathjs(ast, {}).eval()); // document.getElementById('output').innerHTML = JSON.stringify(ast);\n            } catch (e) {\n              document.getElementById('output').innerHTML = 'ðŸ˜•';\n            }\n          }\n        });\n      }\n\n      function applySuperscriptAsPower(mjs, mathJson, config) {\n        let result = mjs;\n\n        if (typeof mathJson === 'object' && mathJson.sup !== undefined) {\n          result = new window.math.expression.node.FunctionNode('pow', [result, mathJsonToMathjs(mathJson.sup, config)]);\n        }\n\n        return result;\n      }\n\n      function getMathjsArgs(mathJson, config) {\n        let result = [];\n\n        if (Array.isArray(mathJson.arg)) {\n          for (let index = 0; index < mathJson.arg.length; index++) {\n            result.push(mathJsonToMathjs(mathJson.arg[index], config));\n          }\n        } else {\n          result = [mathJsonToMathjs(mathJson.arg, config)];\n        }\n\n        return result;\n      }\n      /**\r\n      * Return an array of arguments, with the sub if present as the last argument.\r\n      */\n\n\n      function getMathjsArgsWithSub(mathJson, config) {\n        const result = getMathjsArgs(mathJson, config);\n\n        if (mathJson.sub !== undefined) {\n          result.push(mathJsonToMathjs(mathJson.sub, config));\n        }\n\n        return result;\n      }\n      /**\r\n       * Return a mathjs node tree corresponding to the MathjSON object\r\n       * @param {Object.<string,any>} mathJson\r\n       */\n\n\n      function mathJsonToMathjs(mathJson, config) {\n        let result;\n        if (mathJson === undefined) return undefined;\n\n        if (typeof mathJson === 'number' || mathJson.num !== undefined) {\n          let n = typeof mathJson === 'number' ? mathJson : mathJson.num; // Convert to BigNum if required\n\n          if (config.number === 'BigNumber') n = window.math.bignumber(n);\n          result = new window.math.expression.node.ConstantNode(n); // Apply the superscript as an operation\n\n          result = applySuperscriptAsPower(result, mathJson, config);\n        } else if (typeof mathJson === 'string' || mathJson.sym !== undefined) {\n          const BUILT_IN_CONSTANTS = {\n            Ï€: window.math.pi,\n            Ï„: window.math.tau,\n            // GREEK SMALL LETTER TAU\n            â„¯: window.math.e,\n            // â„¯ SCRIPT SMALL E\n            â…‡: window.math.e,\n            // â…‡ DOUBLE-STRUCK ITALIC SMALL E\n            e: window.math.e,\n            Ï•: window.math.phi,\n            //  GREEK SMALL LETTER PHI\n            â…ˆ: window.math.i,\n            // â…ˆ DOUBLE-STRUCK ITALIC SMALL I\n            â…‰: window.math.i,\n            // â…‰ DOUBLE-STRUCK ITALIC SMALL J\n            i: window.math.i //\n\n          };\n          const symbol = typeof mathJson === 'string' ? mathJson : mathJson.sym;\n\n          if (BUILT_IN_CONSTANTS[symbol]) {\n            result = new window.math.expression.node.ConstantNode(BUILT_IN_CONSTANTS[symbol]);\n          }\n\n          result = applySuperscriptAsPower(result, mathJson, config);\n        } else if (mathJson.op !== undefined) {\n          if (mathJson.lhs !== undefined && mathJson.rhs !== undefined) {\n            const OPERATOR_FUNCTIONS = {\n              '+': 'add',\n              '-': 'subtract',\n              '*': 'multiply',\n              '/': 'divide',\n              // '.*': 'dotMultiply',\n              // './': 'dotDivide',\n              '%': 'mod',\n              mod: 'mod'\n            };\n            const args = [mathJsonToMathjs(mathJson.lhs, config), mathJsonToMathjs(mathJson.rhs, config)];\n            result = new window.math.expression.node.OperatorNode(mathJson.op, OPERATOR_FUNCTIONS[mathJson.op], args);\n          } else if (mathJson.rhs !== undefined) {\n            const UNARY_OPERATOR_FUNCTIONS = {\n              '-': 'unaryMinus',\n              '+': 'unaryPlus' // '~': 'bitNot',\n              // 'not': 'not'\n\n            };\n            result = new window.math.expression.node.OperatorNode(mathJson.op, UNARY_OPERATOR_FUNCTIONS[mathJson.op], [mathJsonToMathjs(mathJson.rhs, config)]);\n          }\n        } else if (mathJson.fn) {\n          if (mathJson.fn === 'log' || mathJson.fn === 'ln' && mathJson.fn.sub !== undefined) {\n            result = new window.math.expression.node.FunctionNode('log', getMathjsArgsWithSub(mathJson, config));\n          } else if (mathJson.fn === 'lb') {\n            const args = getMathjsArgs(mathJson, config);\n            args.push(new window.math.expression.node.ConstantNode(window.math.bignumber(2)));\n            result = new window.math.expression.node.FunctionNode('log', args);\n          } else if (mathJson.fn === 'lg') {\n            result = new window.math.expression.node.FunctionNode(new window.math.expression.node.SymbolNode('log10'), getMathjsArgs(mathJson, config));\n          } else {\n            const fnName = {\n              '+': 'add',\n              '-': 'subtract',\n              '*': 'multiply',\n              '/': 'divide',\n              randomReal: 'random',\n              randomInteger: 'randomInt',\n              Gamma: 'gamma',\n              Re: 're',\n              Im: 'im',\n              binom: 'composition',\n              ucorner: 'ceil',\n              lcorner: 'floor',\n              arccos: 'acos',\n              arcsin: 'asin',\n              arctan: 'atan',\n              arcosh: 'acosh',\n              arsinh: '         asinh'\n            }[mathJson.fn] || mathJson.fn;\n            result = new window.math.expression.node.FunctionNode(fnName, getMathjsArgs(mathJson, config));\n          }\n        } else if (mathJson.group) {\n          result = applySuperscriptAsPower(mathJsonToMathjs(mathJson.group, config), mathJson, config);\n        }\n\n        return result;\n      }\n    };\n\n    this.addQuestion = () => {\n      let counter = this.state.count.concat(['']);\n      this.setState({\n        count: counter,\n        add: !this.state.add\n      });\n    };\n\n    this.handleDelete = i => e => {\n      e.preventDefault();\n      let newarr = [...this.state.count.slice(0, i), ...this.state.count.slice(i + 1)];\n      this.setState({\n        count: newarr\n      });\n    };\n\n    this.targetRef = React.createRef();\n    this.state = {\n      count: [1],\n      add: false\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }\n    }, \"Use Math editor for calculation \"), count.length > 0 && count !== 0 ? count.slice(1, 4).map((count, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"wrap-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, \"Step:\\xA0\", parseInt(`${index}`) + 1), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'fieldwrap',\n      ref: el => this.targetRef.current[index] = el,\n      onClick: () => this.handleClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 10\n      }\n    }), parseInt(index) + 1 === 4 ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDelete(index),\n      className: 'editor-plus btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 41\n      }\n    }, \"-\") : parseInt(index) + 1 === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      className: 'editor-plus btn btn-primary',\n      ref: this.addRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 41\n      }\n    }, \"+\"), \" \") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDelete(index),\n      className: 'editor-plus sub btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      className: 'editor-plus btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 10\n      }\n    }, \"+\"), \" \"))) : null, /*#__PURE__*/React.createElement(\"pre\", {\n      id: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 10\n      }\n    })));\n  }\n\n}\n\nexport default MultiMath;","map":{"version":3,"sources":["D:/Madhu/approach/src/components/explore.jsx"],"names":["React","Component","MathFieldComponent","MathLive","MultiMath","constructor","handleClick","e","target","itemsRef","current","targete","makeMathField","virtualKeyboardMode","virtualKeyboards","onContentDidChange","ast","latexToAST","$text","console","log","document","getElementById","innerHTML","JSON","stringify","mathJsonToMathjs","eval","applySuperscriptAsPower","mjs","mathJson","config","result","sup","undefined","window","math","expression","node","FunctionNode","getMathjsArgs","Array","isArray","arg","index","length","push","getMathjsArgsWithSub","sub","num","n","number","bignumber","ConstantNode","sym","BUILT_IN_CONSTANTS","Ï€","pi","Ï„","tau","â„¯","â…‡","Ï•","phi","â…ˆ","i","â…‰","symbol","op","lhs","rhs","OPERATOR_FUNCTIONS","mod","args","OperatorNode","UNARY_OPERATOR_FUNCTIONS","fn","SymbolNode","fnName","randomReal","randomInteger","Gamma","Re","Im","binom","ucorner","lcorner","arccos","arcsin","arctan","arcosh","arsinh","group","addQuestion","counter","state","count","concat","setState","add","handleDelete","preventDefault","newarr","slice","targetRef","createRef","render","map","parseInt","el","addRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\n\r\n\r\nclass MultiMath extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.targetRef = React.createRef();\r\n        this.state={\r\n            count: [1],\r\n            add: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleClick = () => (e) => {\r\n     \r\n        const target =  this.itemsRef.current;\r\n     \r\n        if (target) {\r\n            const targete =  MathLive.makeMathField(target, {\r\n            \r\n                virtualKeyboardMode: 'onfocus',\r\n                virtualKeyboards: 'all',\r\n                onContentDidChange: (target) => {\r\n                    try {\r\n                        const ast = MathLive.latexToAST(targete.$text());\r\n                        console.log('ast', ast);\r\n                        document.getElementById(\r\n                            'output'\r\n                        ).innerHTML = JSON.stringify(\r\n                            mathJsonToMathjs(ast, {}).eval()\r\n                        );\r\n                        // document.getElementById('output').innerHTML = JSON.stringify(ast);\r\n                    } catch (e) {\r\n                        document.getElementById('output').innerHTML = 'ðŸ˜•';\r\n                    }\r\n                },\r\n            })\r\n    \r\n      }\r\n      function applySuperscriptAsPower(mjs, mathJson, config) {\r\n        let result = mjs;\r\n        if (\r\n            typeof mathJson === 'object' &&\r\n            mathJson.sup !== undefined\r\n        ) {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'pow',\r\n                [result, mathJsonToMathjs(mathJson.sup, config)]\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    function getMathjsArgs(mathJson, config) {\r\n        let result = [];\r\n        if (Array.isArray(mathJson.arg)) {\r\n            for (\r\n                let index = 0;\r\n                index < mathJson.arg.length;\r\n                index++\r\n            ) {\r\n                result.push(\r\n                    mathJsonToMathjs(mathJson.arg[index], config)\r\n                );\r\n            }\r\n        } else {\r\n            result = [mathJsonToMathjs(mathJson.arg, config)];\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n * Return an array of arguments, with the sub if present as the last argument.\r\n */\r\nfunction getMathjsArgsWithSub(mathJson, config) {\r\n    const result = getMathjsArgs(mathJson, config);\r\n    if (mathJson.sub !== undefined) {\r\n        result.push(mathJsonToMathjs(mathJson.sub, config));\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return a mathjs node tree corresponding to the MathjSON object\r\n * @param {Object.<string,any>} mathJson\r\n */\r\nfunction mathJsonToMathjs(mathJson, config) {\r\n    let result;\r\n    if (mathJson === undefined) return undefined;\r\n\r\n    if (\r\n        typeof mathJson === 'number' ||\r\n        mathJson.num !== undefined\r\n    ) {\r\n        let n =\r\n            typeof mathJson === 'number'\r\n                ? mathJson\r\n                : mathJson.num;\r\n\r\n        // Convert to BigNum if required\r\n        if (config.number === 'BigNumber')\r\n            n = window.math.bignumber(n);\r\n\r\n        result = new window.math.expression.node.ConstantNode(\r\n            n\r\n        );\r\n\r\n        // Apply the superscript as an operation\r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (\r\n        typeof mathJson === 'string' ||\r\n        mathJson.sym !== undefined\r\n    ) {\r\n        const BUILT_IN_CONSTANTS = {\r\n            Ï€: window.math.pi,\r\n            Ï„: window.math.tau, // GREEK SMALL LETTER TAU\r\n            â„¯: window.math.e, // â„¯ SCRIPT SMALL E\r\n            â…‡: window.math.e, // â…‡ DOUBLE-STRUCK ITALIC SMALL E\r\n            e: window.math.e,\r\n            Ï•: window.math.phi, //  GREEK SMALL LETTER PHI\r\n            â…ˆ: window.math.i, // â…ˆ DOUBLE-STRUCK ITALIC SMALL I\r\n            â…‰: window.math.i, // â…‰ DOUBLE-STRUCK ITALIC SMALL J\r\n            i: window.math.i, //\r\n        };\r\n        const symbol =\r\n            typeof mathJson === 'string'\r\n                ? mathJson\r\n                : mathJson.sym;\r\n        if (BUILT_IN_CONSTANTS[symbol]) {\r\n            result = new window.math.expression.node.ConstantNode(\r\n                BUILT_IN_CONSTANTS[symbol]\r\n            );\r\n        } \r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (mathJson.op !== undefined) {\r\n        if (\r\n            mathJson.lhs !== undefined &&\r\n            mathJson.rhs !== undefined\r\n        ) {\r\n            const OPERATOR_FUNCTIONS = {\r\n                '+': 'add',\r\n                '-': 'subtract',\r\n                '*': 'multiply',\r\n                '/': 'divide',\r\n                // '.*': 'dotMultiply',\r\n                // './': 'dotDivide',\r\n                '%': 'mod',\r\n                mod: 'mod',\r\n            };\r\n            const args = [\r\n                mathJsonToMathjs(mathJson.lhs, config),\r\n                mathJsonToMathjs(mathJson.rhs, config),\r\n            ];\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                OPERATOR_FUNCTIONS[mathJson.op],\r\n                args\r\n            );\r\n        } else if (mathJson.rhs !== undefined) {\r\n            const UNARY_OPERATOR_FUNCTIONS = {\r\n                '-': 'unaryMinus',\r\n                '+': 'unaryPlus',\r\n                // '~': 'bitNot',\r\n                // 'not': 'not'\r\n            };\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                UNARY_OPERATOR_FUNCTIONS[mathJson.op],\r\n                [mathJsonToMathjs(mathJson.rhs, config)]\r\n            );\r\n        }\r\n    } else if (mathJson.fn) {\r\n        if (\r\n            mathJson.fn === 'log' ||\r\n            (mathJson.fn === 'ln' &&\r\n                mathJson.fn.sub !== undefined)\r\n        ) {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                getMathjsArgsWithSub(mathJson, config)\r\n            );\r\n        } else if (mathJson.fn === 'lb') {\r\n            const args = getMathjsArgs(mathJson, config);\r\n            args.push(\r\n                new window.math.expression.node.ConstantNode(\r\n                    window.math.bignumber(2)\r\n                )\r\n            );\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                args\r\n            );\r\n        } else if (mathJson.fn === 'lg') {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                new window.math.expression.node.SymbolNode(\r\n                    'log10'\r\n                ),\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        } else {\r\n            const fnName =\r\n                {\r\n                    '+': 'add',\r\n                    '-': 'subtract',\r\n                    '*': 'multiply',\r\n                    '/': 'divide',\r\n                    randomReal: 'random',\r\n                    randomInteger: 'randomInt',\r\n                    Gamma: 'gamma',\r\n                    Re: 're',\r\n                    Im: 'im',\r\n                    binom: 'composition',\r\n                    ucorner: 'ceil',\r\n                    lcorner: 'floor',\r\n                    arccos: 'acos',\r\n                    arcsin: 'asin',\r\n                    arctan: 'atan',\r\n                    arcosh: 'acosh',\r\n                    arsinh: '         asinh',\r\n                }[mathJson.fn] || mathJson.fn;\r\n\r\n            result = new window.math.expression.node.FunctionNode(\r\n                fnName,\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        }\r\n    } else if (mathJson.group) {\r\n        result = applySuperscriptAsPower(\r\n            mathJsonToMathjs(mathJson.group, config),\r\n            mathJson,\r\n            config\r\n        );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n    \r\n\r\n    addQuestion = () =>{\r\n        let counter = this.state.count.concat([''])\r\n        this.setState({\r\n            count: counter,\r\n            add: (!this.state.add)\r\n        })\r\n       \r\n        \r\n    }\r\n\r\n     handleDelete = i => e => {\r\n        e.preventDefault()\r\n        let newarr = [\r\n          ...this.state.count.slice(0, i),\r\n          ...this.state.count.slice(i + 1)\r\n        ]\r\n        this.setState({\r\n             count: newarr\r\n        })\r\n      }\r\n\r\n    render(){\r\n         const { count } = this.state\r\n         \r\n        return(\r\n            <div>\r\n          \r\n      <div className=\"App\">\r\n          <p>Use Math editor for calculation </p>\r\n      { count.length > 0 && count !== 0 ? (count.slice(1, 4).map((count, index ) => (\r\n        \r\n          <div key={index} className=\"wrap-set\">\r\n        <p>Step:&nbsp;{parseInt(`${index}`) + 1}</p> \r\n         <span className={'fieldwrap'} ref={el => this.targetRef.current[index] = el}  onClick={()=>this.handleClick(index)}></span>  \r\n         \r\n         {parseInt(index) + 1 ===  4 ?  <button onClick={this.handleDelete(index)} className={'editor-plus btn btn-primary'}>-</button>  :\r\n\r\n        parseInt(index) + 1 ===  1 ?  <><button onClick={this.addQuestion} className={'editor-plus btn btn-primary'} ref={this.addRef}>+</button> </>: \r\n          <><button onClick={this.handleDelete(index)} className={'editor-plus sub btn btn-primary'}>-</button>\r\n         <button onClick={this.addQuestion} className={'editor-plus btn btn-primary'}>+</button> </> }\r\n          </div>\r\n        ))  ) : null }\r\n     \r\n         <pre id=\"output\"></pre>\r\n\r\n      </div> \r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n     \r\n}\r\nexport default MultiMath;"]},"metadata":{},"sourceType":"module"}