{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\Technoduce\\\\madhu\\\\approach\\\\approach\\\\src\\\\components\\\\explore.jsx\";\nimport React, { Component } from 'react';\nimport { MathFieldComponent } from 'react-mathlive';\nimport MathLive from 'mathlive';\nimport { validate, getResultObject } from './explore/hcf/validation';\nimport url from '../api/index.json';\n\nclass MultiMath extends Component {\n  render() {\n    const {\n      count\n    } = this.state;\n    console.log(\"this.state \", this.state);\n    const {\n      increquestion\n    } = this.props;\n    console.log('increquestion', increquestion);\n    const geturl = url.data.question;\n    const loadquestion = increquestion === 1 ? geturl.question1.ques_name : geturl.question0.ques_name;\n    console.log('q222222222222222', this.state.q2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, \" \", loadquestion), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"editor-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, \"Use Math editor for calculation \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"area-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, \"Enter the Greater number i.e., (a) as dividend and  the smaller number i.e (b) as divisor \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'fieldwrap num-area great',\n      ref: this.greaterRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grt-symbol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \">\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'fieldwrap num-area small',\n      ref: this.smallerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"greaterLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"smallerLabel\",\n      className: \"label-err\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"enable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"formula\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }\n    }, \"Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)\"), count.length > 0 && count !== 0 ? count.slice(0, 4).map((count, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      id: `step-${index}`,\n      className: \"view-step\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, \"Step\", parseInt(`${index}`) + 1, \": \\xA0\", parseInt(`${index}`) + 1 === 1 ? url.data.step1 : parseInt(`${index}`) + 1 === 2 ? url.data.step2 : parseInt(`${index}`) + 1 === 3 ? url.data.step3 : parseInt(`${index}`) + 1 ? url.data.step3 : url.data.step5), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `fieldwrap view ${this.state.showfeild ? \"all\" : ''}`,\n      ref: this.targetRef,\n      \"data-value\": index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: `${index}`,\n      class: \"err-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: `action-button-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, parseInt(index) === 0 ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addQuestion(index),\n      className: 'btn btn-primary editor-plus ',\n      id: \"add-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 38\n      }\n    }, \"+\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDelete(index),\n      className: 'editor-plus sub btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 40\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addQuestion(index),\n      className: ' btn btn-primary editor-plus ',\n      id: \"add-btn1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }, \"+\"), \" \"))))) : null), /*#__PURE__*/React.createElement(\"pre\", {\n      id: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default MultiMath;","map":{"version":3,"sources":["H:/Project/Technoduce/madhu/approach/approach/src/components/explore.jsx"],"names":["React","Component","MathFieldComponent","MathLive","validate","getResultObject","url","MultiMath","render","count","state","console","log","increquestion","props","geturl","data","question","loadquestion","question1","ques_name","question0","q2","greaterRef","smallerRef","length","slice","map","index","parseInt","step1","step2","step3","step5","showfeild","targetRef","addQuestion","handleDelete"],"mappings":"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","sourcesContent":[" import React, { Component } from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\nimport { validate, getResultObject } from './explore/hcf/validation';\r\n\r\nimport url from '../api/index.json';\r\n\r\nclass MultiMath extends Component {\r\n    render() {\r\n        const { count } = this.state\r\n        console.log(\"this.state \", this.state);\r\n        const { increquestion } = this.props;\r\n        console.log('increquestion', increquestion);\r\n        const geturl = url.data.question;\r\n       const loadquestion = increquestion === 1 ? geturl.question1.ques_name :geturl.question0.ques_name\r\n    console.log('q222222222222222', this.state.q2);\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <h5> {loadquestion}</h5>\r\n                    <p className=\"editor-text\">Use Math editor for calculation </p>\r\n                    <div className=\"area-wrap\">\r\n                        <p>Enter the Greater number i.e., (a) as dividend and  the smaller number i.e (b) as divisor </p>\r\n                        <span className={'fieldwrap num-area great'} ref={this.greaterRef} ></span>\r\n                        <div className=\"grt-symbol\">></div>\r\n                        <span className={'fieldwrap num-area small'} ref={this.smallerRef}></span>\r\n                        <label id=\"greaterLabel\"></label>\r\n                        <label id=\"smallerLabel\" className=\"label-err\"></label>\r\n                    </div> \r\n                   \r\n                    <div id=\"enable\"> \r\n                     <h6 className=\"formula\">Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)</h6>\r\n                        {count.length > 0 && count !== 0 ? (count.slice(0, 4).map((count, index) => (\r\n                          <div key={index} id={`step-${index}`} className=\"view-step\">\r\n                            <p>Step{(parseInt(`${index}`) + 1)}: &nbsp;\r\n                             {(parseInt(`${index}`) + 1) === 1 ? url.data.step1 : (parseInt(`${index}`) + 1) === 2 ? url.data.step2 :(parseInt(`${index}`) + 1) === 3 ? url.data.step3 : (parseInt(`${index}`) + 1) ?url.data.step3 :url.data.step5 }</p>\r\n                             <div className=\"wrap-set\">\r\n                            <span className={`fieldwrap view ${this.state.showfeild ? \"all\" : ''}`} ref={this.targetRef} data-value={index}>{/*this.state.data[index]*/}</span>\r\n                            <span id={`${index}`} class=\"err-text\"></span>\r\n                            <span id={`action-button-${index}`}>\r\n                                { parseInt(index) === 0 ? \r\n                                    (<button onClick={this.addQuestion(index)} className={'btn btn-primary editor-plus '} id=\"add-btn\">+</button>) :\r\n                                    (<><button onClick={this.handleDelete(index)} className={'editor-plus sub btn btn-primary'}>-</button>\r\n                                    <button onClick={this.addQuestion(index)} className={' btn btn-primary editor-plus '} id=\"add-btn1\">+</button> </>)\r\n                                }   \r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                       ))) : null}\r\n                            </div>\r\n                    <pre id=\"output\"></pre>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default MultiMath;"]},"metadata":{},"sourceType":"module"}