{"ast":null,"code":"var _jsxFileName = \"D:\\\\Madhu\\\\approach\\\\src\\\\components\\\\hint.jsx\";\nimport React, { Component } from 'react';\n\nclass Hint extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      this.setState({\n        render: true\n      });\n    }.bind(this), 1000);\n  }\n\n  render() {\n    let renderContainer = false;\n\n    if (this.state.render) {\n      renderContainer = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, \"Hint\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }\n      }, \"Euclid's Division Lemma\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }\n      }, \"\\\"Given positive integers a and b, there exist unique integers q and r satisfying a = bq + r, 0 <= r <= b\\\"\"), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, \"Note:\\xA0Dividend (a) = divisor (b) x quotient (q) + remainder (r)\"), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, \"Steps:\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, \"1. For this scenario, take two of the given numbers, divide the greater by the smaller and then divide the divisor by the reminder.\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, \"2. Now again divide the divisor of this division by the next remainder found and repeat this method until the remainder is zero.\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \"3. The last divisor that is found will be the HCF of the two numbers asked.\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"4. If there are three numbers given and you need to find the HCF of three numbers then find the HCF of this two numbers and the third number.\"));\n    }\n\n    return renderContainer;\n  }\n\n}\n\nexport default Hint;","map":{"version":3,"sources":["D:/Madhu/approach/src/components/hint.jsx"],"names":["React","Component","Hint","constructor","props","state","render","componentDidMount","setTimeout","setState","bind","renderContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AACxBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,UAAU,CAAC,YAAW;AAClB,WAAKC,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAE;AAAT,OAAd;AACH,KAFU,CAETI,IAFS,CAEJ,IAFI,CAAD,EAEI,IAFJ,CAAV;AAGD;;AAEDJ,EAAAA,MAAM,GAAG;AACP,QAAIK,eAAe,GAAG,KAAtB;;AACA,QAAG,KAAKN,KAAL,CAAWC,MAAd,EAAsB;AAClBK,MAAAA,eAAe,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFmB,eAGpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHoB,eAIpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uHAJoB,eAMnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EANmB,eAOnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPmB,eAQnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mJARmB,eAUnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gJAVmB,eAYnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAZmB,eAanB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJAbmB,CAAnB;AAiBH;;AACD,WACEA,eADF;AAGD;;AArCqB;;AAwC5B,eAAeT,IAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Hint extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            render: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(function() { \r\n            this.setState({render: true}) \r\n        }.bind(this), 1000)\r\n      }\r\n\r\n      render() {\r\n        let renderContainer = false \r\n        if(this.state.render) { \r\n            renderContainer =  <div>\r\n           \r\n            <h5>Hint</h5>\r\n           <h5>Euclid&#39;s Division Lemma</h5> \r\n           <p>&quot;Given positive integers a and b, there exist unique integers q and r satisfying a = bq +\r\n            r, 0 &lt;= r &lt;= b&quot;</p>\r\n            <h6>Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)</h6>\r\n            <h6>Steps:</h6>\r\n            <p>1. For this scenario, take two of the given numbers, divide the greater by the smaller and then\r\n            divide the divisor by the reminder. </p>\r\n            <p>2. Now again divide the divisor of this division by the next remainder found and repeat this\r\n            method until the remainder is zero. </p>\r\n            <p>3. The last divisor that is found will be the HCF of the two numbers asked. </p>\r\n            <p>4. If there are three numbers given and you need to find the HCF of three numbers then find the\r\n            HCF of this two numbers and the third number.</p>\r\n           \r\n        </div>\r\n        }\r\n        return (\r\n          renderContainer \r\n        )\r\n      }\r\n\r\n}\r\nexport default Hint;"]},"metadata":{},"sourceType":"module"}