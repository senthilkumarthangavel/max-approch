{"ast":null,"code":"var _jsxFileName = \"D:\\\\Madhu\\\\approach\\\\src\\\\components\\\\explore.jsx\";\nimport React from 'react';\nimport { MathFieldComponent } from 'react-mathlive';\nimport MathLive from 'mathlive';\nimport { useState, useEffect, useRef } from 'react';\n\nconst MultiMath = () => {\n  const [count, setCount] = React.useState([]);\n  const [add, setadd] = React.useState(true);\n  const targetRef = useRef();\n  useEffect(() => {\n    if (targetRef) {\n      const mathField = MathLive.makeMathField(targetRef.current);\n      mathField.$setConfig({\n        virtualKeyboardMode: 'onfocus',\n        virtualKeyboards: 'all',\n        onContentDidChange: mathfield => {\n          try {\n            const ast = MathLive.latexToAST(mathfield.$text());\n            document.getElementById('output').innerHTML = JSON.stringify(mathJsonToMathjs(ast, {}).eval()); // document.getElementById('output').innerHTML = JSON.stringify(ast);\n          } catch (e) {\n            document.getElementById('output').innerHTML = 'ðŸ˜•';\n          }\n        }\n      });\n    }\n  }, [targetRef]);\n\n  const addQuestion = () => {\n    let counter = count.concat(['']);\n    setCount(counter);\n    console.log(count);\n    setadd(!add);\n  };\n\n  const handleDelete = i => e => {\n    e.preventDefault();\n    let newarr = [...count.slice(0, i), ...count.slice(i + 1)];\n    setCount(newarr);\n  };\n\n  console.log(add);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Use Math editor for calculation \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: 'fieldwrap',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), \"  \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 51\n    }\n  }, \"+\"), count.map((count, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: 'fieldwrap',\n    ref: targetRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), \"  \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 67\n    }\n  }, \"+\"), \" : \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 110\n    }\n  }, \"-\"))), /*#__PURE__*/React.createElement(\"pre\", {\n    id: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }));\n};\n\nfunction applySuperscriptAsPower(mjs, mathJson, config) {\n  let result = mjs;\n\n  if (typeof mathJson === 'object' && mathJson.sup !== undefined) {\n    result = new window.math.expression.node.FunctionNode('pow', [result, mathJsonToMathjs(mathJson.sup, config)]);\n  }\n\n  return result;\n}\n\nfunction getMathjsArgs(mathJson, config) {\n  let result = [];\n\n  if (Array.isArray(mathJson.arg)) {\n    for (let index = 0; index < mathJson.arg.length; index++) {\n      result.push(mathJsonToMathjs(mathJson.arg[index], config));\n    }\n  } else {\n    result = [mathJsonToMathjs(mathJson.arg, config)];\n  }\n\n  return result;\n}\n/**\r\n * Return an array of arguments, with the sub if present as the last argument.\r\n */\n\n\nfunction getMathjsArgsWithSub(mathJson, config) {\n  const result = getMathjsArgs(mathJson, config);\n\n  if (mathJson.sub !== undefined) {\n    result.push(mathJsonToMathjs(mathJson.sub, config));\n  }\n\n  return result;\n}\n/**\r\n * Return a mathjs node tree corresponding to the MathjSON object\r\n * @param {Object.<string,any>} mathJson\r\n */\n\n\nfunction mathJsonToMathjs(mathJson, config) {\n  let result;\n  if (mathJson === undefined) return undefined;\n\n  if (typeof mathJson === 'number' || mathJson.num !== undefined) {\n    let n = typeof mathJson === 'number' ? mathJson : mathJson.num; // Convert to BigNum if required\n\n    if (config.number === 'BigNumber') n = window.math.bignumber(n);\n    result = new window.math.expression.node.ConstantNode(n); // Apply the superscript as an operation\n\n    result = applySuperscriptAsPower(result, mathJson, config);\n  } else if (typeof mathJson === 'string' || mathJson.sym !== undefined) {\n    const BUILT_IN_CONSTANTS = {\n      Ï€: window.math.pi,\n      Ï„: window.math.tau,\n      // GREEK SMALL LETTER TAU\n      â„¯: window.math.e,\n      // â„¯ SCRIPT SMALL E\n      â…‡: window.math.e,\n      // â…‡ DOUBLE-STRUCK ITALIC SMALL E\n      e: window.math.e,\n      Ï•: window.math.phi,\n      //  GREEK SMALL LETTER PHI\n      â…ˆ: window.math.i,\n      // â…ˆ DOUBLE-STRUCK ITALIC SMALL I\n      â…‰: window.math.i,\n      // â…‰ DOUBLE-STRUCK ITALIC SMALL J\n      i: window.math.i //\n\n    };\n    const symbol = typeof mathJson === 'string' ? mathJson : mathJson.sym;\n\n    if (BUILT_IN_CONSTANTS[symbol]) {\n      result = new window.math.expression.node.ConstantNode(BUILT_IN_CONSTANTS[symbol]);\n    }\n\n    result = applySuperscriptAsPower(result, mathJson, config);\n  } else if (mathJson.op !== undefined) {\n    if (mathJson.lhs !== undefined && mathJson.rhs !== undefined) {\n      const OPERATOR_FUNCTIONS = {\n        '+': 'add',\n        '-': 'subtract',\n        '*': 'multiply',\n        '/': 'divide',\n        // '.*': 'dotMultiply',\n        // './': 'dotDivide',\n        '%': 'mod',\n        mod: 'mod'\n      };\n      const args = [mathJsonToMathjs(mathJson.lhs, config), mathJsonToMathjs(mathJson.rhs, config)];\n      result = new window.math.expression.node.OperatorNode(mathJson.op, OPERATOR_FUNCTIONS[mathJson.op], args);\n    } else if (mathJson.rhs !== undefined) {\n      const UNARY_OPERATOR_FUNCTIONS = {\n        '-': 'unaryMinus',\n        '+': 'unaryPlus' // '~': 'bitNot',\n        // 'not': 'not'\n\n      };\n      result = new window.math.expression.node.OperatorNode(mathJson.op, UNARY_OPERATOR_FUNCTIONS[mathJson.op], [mathJsonToMathjs(mathJson.rhs, config)]);\n    }\n  } else if (mathJson.fn) {\n    if (mathJson.fn === 'log' || mathJson.fn === 'ln' && mathJson.fn.sub !== undefined) {\n      result = new window.math.expression.node.FunctionNode('log', getMathjsArgsWithSub(mathJson, config));\n    } else if (mathJson.fn === 'lb') {\n      const args = getMathjsArgs(mathJson, config);\n      args.push(new window.math.expression.node.ConstantNode(window.math.bignumber(2)));\n      result = new window.math.expression.node.FunctionNode('log', args);\n    } else if (mathJson.fn === 'lg') {\n      result = new window.math.expression.node.FunctionNode(new window.math.expression.node.SymbolNode('log10'), getMathjsArgs(mathJson, config));\n    } else {\n      const fnName = {\n        '+': 'add',\n        '-': 'subtract',\n        '*': 'multiply',\n        '/': 'divide',\n        randomReal: 'random',\n        randomInteger: 'randomInt',\n        Gamma: 'gamma',\n        Re: 're',\n        Im: 'im',\n        binom: 'composition',\n        ucorner: 'ceil',\n        lcorner: 'floor',\n        arccos: 'acos',\n        arcsin: 'asin',\n        arctan: 'atan',\n        arcosh: 'acosh',\n        arsinh: '         asinh'\n      }[mathJson.fn] || mathJson.fn;\n      result = new window.math.expression.node.FunctionNode(fnName, getMathjsArgs(mathJson, config));\n    }\n  } else if (mathJson.group) {\n    result = applySuperscriptAsPower(mathJsonToMathjs(mathJson.group, config), mathJson, config);\n  }\n\n  return result;\n}\n\nexport default MultiMath;","map":{"version":3,"sources":["D:/Madhu/approach/src/components/explore.jsx"],"names":["React","MathFieldComponent","MathLive","useState","useEffect","useRef","MultiMath","count","setCount","add","setadd","targetRef","mathField","makeMathField","current","$setConfig","virtualKeyboardMode","virtualKeyboards","onContentDidChange","mathfield","ast","latexToAST","$text","document","getElementById","innerHTML","JSON","stringify","mathJsonToMathjs","eval","e","addQuestion","counter","concat","console","log","handleDelete","i","preventDefault","newarr","slice","map","index","applySuperscriptAsPower","mjs","mathJson","config","result","sup","undefined","window","math","expression","node","FunctionNode","getMathjsArgs","Array","isArray","arg","length","push","getMathjsArgsWithSub","sub","num","n","number","bignumber","ConstantNode","sym","BUILT_IN_CONSTANTS","Ï€","pi","Ï„","tau","â„¯","â…‡","Ï•","phi","â…ˆ","â…‰","symbol","op","lhs","rhs","OPERATOR_FUNCTIONS","mod","args","OperatorNode","UNARY_OPERATOR_FUNCTIONS","fn","SymbolNode","fnName","randomReal","randomInteger","Gamma","Re","Im","binom","ucorner","lcorner","arccos","arcsin","arctan","arcosh","arsinh","group"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\nimport{ useState, useEffect, useRef } from 'react';\r\n\r\nconst MultiMath = () => {\r\n    const [count, setCount] = React.useState([]);\r\n    const [add, setadd] = React.useState(true);\r\n    const targetRef = useRef();\r\n\r\n useEffect(() => {\r\n       \r\n        if (targetRef) {\r\n           \r\n          const mathField = MathLive.makeMathField(targetRef.current);\r\n           mathField.$setConfig({\r\n        virtualKeyboardMode: 'onfocus',\r\n        virtualKeyboards: 'all',\r\n        onContentDidChange: mathfield => {\r\n          try {\r\n              const ast = MathLive.latexToAST(mathfield.$text());\r\n              document.getElementById(\r\n                  'output'\r\n              ).innerHTML = JSON.stringify(\r\n                  mathJsonToMathjs(ast, {}).eval()\r\n              );\r\n              // document.getElementById('output').innerHTML = JSON.stringify(ast);\r\n          } catch (e) {\r\n              document.getElementById('output').innerHTML = 'ðŸ˜•';\r\n          }\r\n        },\r\n      })\r\n        }\r\n      }, [targetRef]);\r\n\r\n\r\n\r\n    const addQuestion = () =>{\r\n        let counter = count.concat([''])\r\n        setCount(counter)\r\n        console.log(count)\r\n        setadd(!add)\r\n       \r\n    }\r\n\r\n    const handleDelete = i => e => {\r\n        e.preventDefault()\r\n        let newarr = [\r\n          ...count.slice(0, i),\r\n          ...count.slice(i + 1)\r\n        ]\r\n        setCount(newarr)\r\n      }\r\n    console.log(add)\r\n    return (\r\n      <div className=\"App\">\r\n          <p>Use Math editor for calculation </p>\r\n          <span className={'fieldwrap'} ></span>  <button onClick={addQuestion}>+</button> \r\n        {count.map((count, index) => (\r\n          <div key={index}>\r\n          <span  className={'fieldwrap'} ref={targetRef}></span>  <button onClick={addQuestion}>+</button> : <button onClick={handleDelete(index)}>-</button>\r\n          </div>\r\n           ))}\r\n     \r\n         <pre id=\"output\"></pre>\r\n      \r\n      \r\n      </div>\r\n    );\r\n  }\r\n  \r\nfunction applySuperscriptAsPower(mjs, mathJson, config) {\r\n    let result = mjs;\r\n    if (\r\n        typeof mathJson === 'object' &&\r\n        mathJson.sup !== undefined\r\n    ) {\r\n        result = new window.math.expression.node.FunctionNode(\r\n            'pow',\r\n            [result, mathJsonToMathjs(mathJson.sup, config)]\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getMathjsArgs(mathJson, config) {\r\n    let result = [];\r\n    if (Array.isArray(mathJson.arg)) {\r\n        for (\r\n            let index = 0;\r\n            index < mathJson.arg.length;\r\n            index++\r\n        ) {\r\n            result.push(\r\n                mathJsonToMathjs(mathJson.arg[index], config)\r\n            );\r\n        }\r\n    } else {\r\n        result = [mathJsonToMathjs(mathJson.arg, config)];\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return an array of arguments, with the sub if present as the last argument.\r\n */\r\nfunction getMathjsArgsWithSub(mathJson, config) {\r\n    const result = getMathjsArgs(mathJson, config);\r\n    if (mathJson.sub !== undefined) {\r\n        result.push(mathJsonToMathjs(mathJson.sub, config));\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return a mathjs node tree corresponding to the MathjSON object\r\n * @param {Object.<string,any>} mathJson\r\n */\r\nfunction mathJsonToMathjs(mathJson, config) {\r\n    let result;\r\n    if (mathJson === undefined) return undefined;\r\n\r\n    if (\r\n        typeof mathJson === 'number' ||\r\n        mathJson.num !== undefined\r\n    ) {\r\n        let n =\r\n            typeof mathJson === 'number'\r\n                ? mathJson\r\n                : mathJson.num;\r\n\r\n        // Convert to BigNum if required\r\n        if (config.number === 'BigNumber')\r\n            n = window.math.bignumber(n);\r\n\r\n        result = new window.math.expression.node.ConstantNode(\r\n            n\r\n        );\r\n\r\n        // Apply the superscript as an operation\r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (\r\n        typeof mathJson === 'string' ||\r\n        mathJson.sym !== undefined\r\n    ) {\r\n        const BUILT_IN_CONSTANTS = {\r\n            Ï€: window.math.pi,\r\n            Ï„: window.math.tau, // GREEK SMALL LETTER TAU\r\n            â„¯: window.math.e, // â„¯ SCRIPT SMALL E\r\n            â…‡: window.math.e, // â…‡ DOUBLE-STRUCK ITALIC SMALL E\r\n            e: window.math.e,\r\n            Ï•: window.math.phi, //  GREEK SMALL LETTER PHI\r\n            â…ˆ: window.math.i, // â…ˆ DOUBLE-STRUCK ITALIC SMALL I\r\n            â…‰: window.math.i, // â…‰ DOUBLE-STRUCK ITALIC SMALL J\r\n            i: window.math.i, //\r\n        };\r\n        const symbol =\r\n            typeof mathJson === 'string'\r\n                ? mathJson\r\n                : mathJson.sym;\r\n        if (BUILT_IN_CONSTANTS[symbol]) {\r\n            result = new window.math.expression.node.ConstantNode(\r\n                BUILT_IN_CONSTANTS[symbol]\r\n            );\r\n        } \r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (mathJson.op !== undefined) {\r\n        if (\r\n            mathJson.lhs !== undefined &&\r\n            mathJson.rhs !== undefined\r\n        ) {\r\n            const OPERATOR_FUNCTIONS = {\r\n                '+': 'add',\r\n                '-': 'subtract',\r\n                '*': 'multiply',\r\n                '/': 'divide',\r\n                // '.*': 'dotMultiply',\r\n                // './': 'dotDivide',\r\n                '%': 'mod',\r\n                mod: 'mod',\r\n            };\r\n            const args = [\r\n                mathJsonToMathjs(mathJson.lhs, config),\r\n                mathJsonToMathjs(mathJson.rhs, config),\r\n            ];\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                OPERATOR_FUNCTIONS[mathJson.op],\r\n                args\r\n            );\r\n        } else if (mathJson.rhs !== undefined) {\r\n            const UNARY_OPERATOR_FUNCTIONS = {\r\n                '-': 'unaryMinus',\r\n                '+': 'unaryPlus',\r\n                // '~': 'bitNot',\r\n                // 'not': 'not'\r\n            };\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                UNARY_OPERATOR_FUNCTIONS[mathJson.op],\r\n                [mathJsonToMathjs(mathJson.rhs, config)]\r\n            );\r\n        }\r\n    } else if (mathJson.fn) {\r\n        if (\r\n            mathJson.fn === 'log' ||\r\n            (mathJson.fn === 'ln' &&\r\n                mathJson.fn.sub !== undefined)\r\n        ) {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                getMathjsArgsWithSub(mathJson, config)\r\n            );\r\n        } else if (mathJson.fn === 'lb') {\r\n            const args = getMathjsArgs(mathJson, config);\r\n            args.push(\r\n                new window.math.expression.node.ConstantNode(\r\n                    window.math.bignumber(2)\r\n                )\r\n            );\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                args\r\n            );\r\n        } else if (mathJson.fn === 'lg') {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                new window.math.expression.node.SymbolNode(\r\n                    'log10'\r\n                ),\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        } else {\r\n            const fnName =\r\n                {\r\n                    '+': 'add',\r\n                    '-': 'subtract',\r\n                    '*': 'multiply',\r\n                    '/': 'divide',\r\n                    randomReal: 'random',\r\n                    randomInteger: 'randomInt',\r\n                    Gamma: 'gamma',\r\n                    Re: 're',\r\n                    Im: 'im',\r\n                    binom: 'composition',\r\n                    ucorner: 'ceil',\r\n                    lcorner: 'floor',\r\n                    arccos: 'acos',\r\n                    arcsin: 'asin',\r\n                    arctan: 'atan',\r\n                    arcosh: 'acosh',\r\n                    arsinh: '         asinh',\r\n                }[mathJson.fn] || mathJson.fn;\r\n\r\n            result = new window.math.expression.node.FunctionNode(\r\n                fnName,\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        }\r\n    } else if (mathJson.group) {\r\n        result = applySuperscriptAsPower(\r\n            mathJsonToMathjs(mathJson.group, config),\r\n            mathJson,\r\n            config\r\n        );\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport default MultiMath;"]},"metadata":{},"sourceType":"module"}