{"ast":null,"code":"var _jsxFileName = \"D:\\\\Madhu\\\\approach\\\\src\\\\components\\\\explore.jsx\";\nimport React, { Component } from 'react';\nimport { MathFieldComponent } from 'react-mathlive';\nimport MathLive from 'mathlive';\n\nclass MultiMath extends Component {\n  constructor() {\n    super();\n\n    this.addQuestion = () => {\n      let counter = this.state.count.concat(['']);\n      this.setState({\n        count: counter,\n        add: !this.state.add\n      });\n    };\n\n    this.handleDelete = i => e => {\n      e.preventDefault();\n      let newarr = [...this.state.count.slice(0, i), ...this.state.count.slice(i + 1)];\n      this.setState({\n        count: newarr\n      });\n    };\n\n    this.state = {\n      count: [0],\n      add: false\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Use Math editor for calculation \"), count.slice(0, 4).map((count, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"wrap-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Step:\\xA0\", parseInt(`${index}`) + 1), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'fieldwrap',\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }\n    }), parseInt(index) + 1 === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      className: 'editor-plus btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"+\"), \" \") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDelete(index),\n      className: 'editor-plus sub btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      className: 'editor-plus btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }\n    }, \"+\"), \" \"))), /*#__PURE__*/React.createElement(\"pre\", {\n      id: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }\n    })));\n  }\n\n}\n\nexport default MultiMath;","map":{"version":3,"sources":["D:/Madhu/approach/src/components/explore.jsx"],"names":["React","Component","MathFieldComponent","MathLive","MultiMath","constructor","addQuestion","counter","state","count","concat","setState","add","handleDelete","i","e","preventDefault","newarr","slice","render","map","index","parseInt","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAGA,MAAMC,SAAN,SAAwBH,SAAxB,CAAiC;AAE7BI,EAAAA,WAAW,GAAE;AACT;;AADS,SAQbC,WARa,GAQC,MAAK;AACf,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB,CAAC,EAAD,CAAxB,CAAd;AACA,WAAKC,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAEF,OADG;AAEVK,QAAAA,GAAG,EAAG,CAAC,KAAKJ,KAAL,CAAWI;AAFR,OAAd;AAMH,KAhBY;;AAAA,SAkBZC,YAlBY,GAkBGC,CAAC,IAAIC,CAAC,IAAI;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,MAAM,GAAG,CACX,GAAG,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,KAAjB,CAAuB,CAAvB,EAA0BJ,CAA1B,CADQ,EAEX,GAAG,KAAKN,KAAL,CAAWC,KAAX,CAAiBS,KAAjB,CAAuBJ,CAAC,GAAG,CAA3B,CAFQ,CAAb;AAIA,WAAKH,QAAL,CAAc;AACTF,QAAAA,KAAK,EAAEQ;AADE,OAAd;AAGD,KA3BU;;AAET,SAAKT,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAE,CAAC,CAAD,CADA;AAEPG,MAAAA,GAAG,EAAE;AAFE,KAAX;AAIH;;AAuBDO,EAAAA,MAAM,GAAE;AACH,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEN;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,EAEIC,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBE,GAAlB,CAAsB,CAACX,KAAD,EAAQY,KAAR,kBAEtB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeC,QAAQ,CAAE,GAAED,KAAM,EAAV,CAAR,GAAuB,CAAtC,CADE,eAED;AAAM,MAAA,SAAS,EAAE,WAAjB;AAA8B,MAAA,QAAQ,EAAE,KAAKE,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,EAIAD,QAAQ,CAACD,KAAD,CAAR,GAAkB,CAAlB,KAAyB,CAAzB,gBACA,uDAAE;AAAQ,MAAA,OAAO,EAAE,KAAKf,WAAtB;AAAmC,MAAA,SAAS,EAAE,6BAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF,MADA,gBAED,uDAAE;AAAQ,MAAA,OAAO,EAAE,KAAKO,YAAL,CAAkBQ,KAAlB,CAAjB;AAA2C,MAAA,SAAS,EAAE,iCAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF,eACA;AAAQ,MAAA,OAAO,EAAE,KAAKf,WAAtB;AAAmC,MAAA,SAAS,EAAE,6BAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,MANC,CAFA,CAFJ,eAeG;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfH,CAFM,CADJ;AAuBH;;AAxD4B;;AA0DjC,eAAeF,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\n\r\n\r\nclass MultiMath extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count: [0],\r\n            add: false\r\n        }\r\n    }\r\n\r\n    addQuestion = () =>{\r\n        let counter = this.state.count.concat([''])\r\n        this.setState({\r\n            count: counter,\r\n            add: (!this.state.add)\r\n        })\r\n       \r\n        \r\n    }\r\n\r\n     handleDelete = i => e => {\r\n        e.preventDefault()\r\n        let newarr = [\r\n          ...this.state.count.slice(0, i),\r\n          ...this.state.count.slice(i + 1)\r\n        ]\r\n        this.setState({\r\n             count: newarr\r\n        })\r\n      }\r\n\r\n    render(){\r\n         const { count } = this.state\r\n        return(\r\n            <div>\r\n                    \r\n      <div className=\"App\">\r\n          <p>Use Math editor for calculation </p>\r\n         {count.slice(0, 4).map((count, index ) => (\r\n        \r\n          <div key={index} className=\"wrap-set\">\r\n        <p>Step:&nbsp;{parseInt(`${index}`) + 1}</p>\r\n         <span className={'fieldwrap'} onChange={this.handleChange}></span>  \r\n         \r\n         {parseInt(index) + 1 ===  1 ?\r\n          <><button onClick={this.addQuestion} className={'editor-plus btn btn-primary'}>+</button> </>: \r\n         <><button onClick={this.handleDelete(index)} className={'editor-plus sub btn btn-primary'}>-</button>\r\n         <button onClick={this.addQuestion} className={'editor-plus btn btn-primary'}>+</button> </>}\r\n          </div>\r\n        ))  }\r\n     \r\n         <pre id=\"output\"></pre>\r\n\r\n      </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MultiMath;"]},"metadata":{},"sourceType":"module"}