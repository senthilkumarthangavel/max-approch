{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\Technoduce\\\\madhu\\\\approach\\\\approach\\\\src\\\\components\\\\explore.jsx\";\nimport React, { Component } from 'react';\nimport { MathFieldComponent } from 'react-mathlive';\nimport MathLive from 'mathlive';\nimport { validate, getResultObject } from './explore/hcf/validation';\nimport url from '../api/index.json';\n\nclass MultiMath extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addQuestion = i => e => {\n      e.preventDefault();\n      document.getElementById(`action-button-${i}`).style.display = \"none\";\n      document.getElementById(`step-${i}`).style.pointerEvents = \"none\";\n      let counter = this.state.count.concat(['']);\n      let data = getResultObject(this.ast, this.get_index, this.state);\n      this.setState({\n        count: counter,\n        add: false,\n        data: data\n      });\n      console.log('data', this.state.data);\n    };\n\n    this.handleDelete = i => e => {\n      e.preventDefault();\n      document.getElementById(`action-button-${i - 1}`).style.display = \"block\";\n      document.getElementById(`action-button-${i - 1}`).style.display = \"block\";\n      document.getElementById(`step-${i - 1}`).style.pointerEvents = \"auto\";\n      console.log('elem');\n      let count = [...this.state.count.slice(0, i)];\n      console.log('couunter', count);\n      this.setState({\n        count\n      });\n    };\n\n    this.handleEnable = condition => {\n      if (condition) {\n        document.getElementById(\"enable\").style.display = \"block\";\n      } else {\n        document.getElementById(\"enable\").style.display = \"none\";\n      }\n    };\n\n    this.ast = undefined;\n    this.get_index = undefined;\n    this.targetRef = React.createRef();\n    this.smallerRef = React.createRef();\n    this.greaterRef = React.createRef();\n    this.state = {\n      num: true,\n      count: [1],\n      add: true,\n      q1: 225,\n      q2: 135,\n      data: {},\n      showfeild: true,\n      step: false\n    };\n  }\n\n  componentDidMount() {\n    this.handleEnable(false);\n  }\n\n  componentDidUpdate() {\n    if (this.props.increquestion === 1) {\n      this.setState({\n        q1: url.data.question.question1.data.q1\n      });\n    }\n\n    if (this.state.add) {\n      const value = this.state.num ? this.greaterRef.current : this.smallerRef.current;\n\n      if (value) {\n        const mathField = MathLive.makeMathField(value);\n        mathField.$setConfig({\n          virtualKeyboardMode: 'onfocus',\n          virtualKeyboards: 'all',\n          onContentDidChange: mathfield => {\n            if (value === this.greaterRef.current) {\n              try {\n                const num = MathLive.latexToAST(mathfield.$text());\n\n                if (parseInt(num.num) === this.state.q1) {\n                  console.log('qqq2');\n                  this.setState({\n                    num: !num\n                  });\n                  document.getElementById('greaterLabel').innerHTML = \"\";\n                } else {\n                  const labelload = `Please enter the Greater number between ${this.state.q1} and ${this.state.q2}`;\n                  document.getElementById('greaterLabel').innerHTML = \"Please enter the Greater number between 225 and 135\";\n                }\n              } catch (e) {\n                /*  document.getElementById('output').innerHTML = 'ðŸ˜•';*/\n              }\n            }\n\n            if (value === this.smallerRef.current) {\n              try {\n                const number = MathLive.latexToAST(mathfield.$text());\n\n                if (parseInt(number.num) === this.state.q2) {\n                  console.log('qqq2');\n                  const label = document.getElementById('smallerLabel');\n                  label.innerHTML = \"Now the numbers are ordered in descending order.\";\n                  label.style.color = '#4CAF50';\n                  this.handleEnable(true);\n                } else {\n                  const labelload = `Please enter the Smaller number between ${this.state.q1} and ${this.state.q2}`;\n                  document.getElementById('smallerLabel').innerHTML = labelload;\n                  this.handleEnable(false);\n                }\n              } catch (e) {\n                /*  document.getElementById('output').innerHTML = 'ðŸ˜•';*/\n              }\n            }\n          }\n        });\n      }\n    }\n\n    const target = this.targetRef.current;\n    console.log('target', target);\n\n    if (target && target === this.targetRef.current) {\n      const value_index = target.getAttribute('data-value'); //index value\n\n      this.get_index = value_index; //console.log('value_index', value_index)                 //index value\n\n      console.log('target', target);\n      const mathField = MathLive.makeMathField(target);\n      console.log('mathField', mathField);\n      mathField.$setConfig({\n        virtualKeyboardMode: 'onfocus',\n        virtualKeyboards: 'all',\n        onBlur: mathfield => {\n          try {\n            const ast = MathLive.latexToAST(mathfield.$text());\n            this.ast = ast; //validate HCF\n\n            let valid = validate(ast, this.get_index, this.state);\n            console.log(\"valid \", valid); //valid => true dont hide + and green in textbox \n            //valid => otherwise hide +, red in textbox and show error message under textbox\n\n            if (valid === true) {\n              let getValue = getResultObject(this.ast, this.get_index, this.state);\n              console.log('soole', getValue);\n\n              if (getValue[this.get_index].r !== 0) {\n                var element = document.getElementById(`${this.get_index}`);\n                element.textContent = url.feedback.postFeedback1;\n              }\n\n              if (getValue[this.get_index].r === 0) {\n                var element = document.getElementById(`${this.get_index}`);\n                element.textContent = `${url.feedback.postFeedback2} ${this.state.q1} and ${this.state.q2} is ${getValue[this.get_index].b}`;\n              }\n\n              if (parseInt(this.get_index) === 0) {\n                var d = document.getElementById(\"add-btn\");\n                d.className += \"show\";\n              }\n\n              if (parseInt(this.get_index) !== 0) {\n                var ele = document.getElementById(\"add-btn1\");\n\n                if (ele.classList.contains('show')) {\n                  ele.classList.remove('show');\n                } else {\n                  ele.className += \"show\";\n                  var d = document.getElementById(\"add-btn\");\n                  d.classList.remove('show');\n                }\n              }\n            } else {\n              var errElement = document.getElementById(`${this.get_index}`);\n              errElement.innerHTML = valid;\n              errElement.style.color = '#d80000';\n            }\n            /* document.getElementById(\r\n                 'output'\r\n             ).innerHTML = JSON.stringify(\r\n                 mathJsonToMathjs(ast, {}).eval()\r\n             ); */\n            // document.getElementById('output').innerHTML = JSON.stringify(ast);\n\n          } catch (e) {\n            /*  document.getElementById('output').innerHTML = 'ðŸ˜•';*/\n          }\n        }\n      });\n    }\n\n    function applySuperscriptAsPower(mjs, mathJson, config) {\n      let result = mjs;\n\n      if (typeof mathJson === 'object' && mathJson.sup !== undefined) {\n        result = new window.math.expression.node.FunctionNode('pow', [result, mathJsonToMathjs(mathJson.sup, config)]);\n      }\n\n      return result;\n    }\n\n    function getMathjsArgs(mathJson, config) {\n      let result = [];\n\n      if (Array.isArray(mathJson.arg)) {\n        for (let index = 0; index < mathJson.arg.length; index++) {\n          result.push(mathJsonToMathjs(mathJson.arg[index], config));\n        }\n      } else {\n        result = [mathJsonToMathjs(mathJson.arg, config)];\n      }\n\n      return result;\n    }\n    /**\r\n     * Return an array of arguments, with the sub if present as the last argument.\r\n     */\n\n\n    function getMathjsArgsWithSub(mathJson, config) {\n      const result = getMathjsArgs(mathJson, config);\n\n      if (mathJson.sub !== undefined) {\n        result.push(mathJsonToMathjs(mathJson.sub, config));\n      }\n\n      return result;\n    }\n    /**\r\n     * Return a mathjs node tree corresponding to the MathjSON object\r\n     * @param {Object.<string,any>} mathJson\r\n     */\n\n\n    function mathJsonToMathjs(mathJson, config) {\n      let result;\n      if (mathJson === undefined) return undefined;\n\n      if (typeof mathJson === 'number' || mathJson.num !== undefined) {\n        let n = typeof mathJson === 'number' ? mathJson : mathJson.num; // Convert to BigNum if required\n\n        if (config.number === 'BigNumber') n = window.math.bignumber(n);\n        result = new window.math.expression.node.ConstantNode(n); // Apply the superscript as an operation\n\n        result = applySuperscriptAsPower(result, mathJson, config);\n      } else if (typeof mathJson === 'string' || mathJson.sym !== undefined) {\n        const BUILT_IN_CONSTANTS = {\n          Ï€: window.math.pi,\n          Ï„: window.math.tau,\n          // GREEK SMALL LETTER TAU\n          â„¯: window.math.e,\n          // â„¯ SCRIPT SMALL E\n          â…‡: window.math.e,\n          // â…‡ DOUBLE-STRUCK ITALIC SMALL E\n          e: window.math.e,\n          Ï•: window.math.phi,\n          //  GREEK SMALL LETTER PHI\n          â…ˆ: window.math.i,\n          // â…ˆ DOUBLE-STRUCK ITALIC SMALL I\n          â…‰: window.math.i,\n          // â…‰ DOUBLE-STRUCK ITALIC SMALL J\n          i: window.math.i //\n\n        };\n        const symbol = typeof mathJson === 'string' ? mathJson : mathJson.sym;\n\n        if (BUILT_IN_CONSTANTS[symbol]) {\n          result = new window.math.expression.node.ConstantNode(BUILT_IN_CONSTANTS[symbol]);\n        }\n\n        result = applySuperscriptAsPower(result, mathJson, config);\n      } else if (mathJson.op !== undefined) {\n        if (mathJson.lhs !== undefined && mathJson.rhs !== undefined) {\n          const OPERATOR_FUNCTIONS = {\n            '+': 'add',\n            '-': 'subtract',\n            '*': 'multiply',\n            '/': 'divide',\n            // '.*': 'dotMultiply',\n            // './': 'dotDivide',\n            '%': 'mod',\n            mod: 'mod'\n          };\n          const args = [mathJsonToMathjs(mathJson.lhs, config), mathJsonToMathjs(mathJson.rhs, config)];\n          result = new window.math.expression.node.OperatorNode(mathJson.op, OPERATOR_FUNCTIONS[mathJson.op], args);\n        } else if (mathJson.rhs !== undefined) {\n          const UNARY_OPERATOR_FUNCTIONS = {\n            '-': 'unaryMinus',\n            '+': 'unaryPlus' // '~': 'bitNot',\n            // 'not': 'not'\n\n          };\n          result = new window.math.expression.node.OperatorNode(mathJson.op, UNARY_OPERATOR_FUNCTIONS[mathJson.op], [mathJsonToMathjs(mathJson.rhs, config)]);\n        }\n      } else if (mathJson.fn) {\n        if (mathJson.fn === 'log' || mathJson.fn === 'ln' && mathJson.fn.sub !== undefined) {\n          result = new window.math.expression.node.FunctionNode('log', getMathjsArgsWithSub(mathJson, config));\n        } else if (mathJson.fn === 'lb') {\n          const args = getMathjsArgs(mathJson, config);\n          args.push(new window.math.expression.node.ConstantNode(window.math.bignumber(2)));\n          result = new window.math.expression.node.FunctionNode('log', args);\n        } else if (mathJson.fn === 'lg') {\n          result = new window.math.expression.node.FunctionNode(new window.math.expression.node.SymbolNode('log10'), getMathjsArgs(mathJson, config));\n        } else {\n          const fnName = {\n            '+': 'add',\n            '-': 'subtract',\n            '*': 'multiply',\n            '/': 'divide',\n            randomReal: 'random',\n            randomInteger: 'randomInt',\n            Gamma: 'gamma',\n            Re: 're',\n            Im: 'im',\n            binom: 'composition',\n            ucorner: 'ceil',\n            lcorner: 'floor',\n            arccos: 'acos',\n            arcsin: 'asin',\n            arctan: 'atan',\n            arcosh: 'acosh',\n            arsinh: 'asinh'\n          }[mathJson.fn] || mathJson.fn;\n          result = new window.math.expression.node.FunctionNode(fnName, getMathjsArgs(mathJson, config));\n        }\n      } else if (mathJson.group) {\n        result = applySuperscriptAsPower(mathJsonToMathjs(mathJson.group, config), mathJson, config);\n      }\n\n      return result;\n    }\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    console.log(\"this.state \", this.state);\n    const {\n      increquestion\n    } = this.props;\n    console.log('increquestion', increquestion);\n    const geturl = url.data.question;\n    const loadquestion = increquestion === 1 ? geturl.question1.ques_name : geturl.question0.ques_name;\n    console.log('q222222222222222', this.state.q2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }\n    }, \" \", loadquestion), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"editor-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 21\n      }\n    }, \"Use Math editor for calculation \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"area-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 25\n      }\n    }, \"Enter the Greater number i.e., (a) as dividend and  the smaller number i.e (b) as divisor \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'fieldwrap num-area great',\n      ref: this.greaterRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grt-symbol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 25\n      }\n    }, \">\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'fieldwrap num-area small',\n      ref: this.smallerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"greaterLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"smallerLabel\",\n      className: \"label-err\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"enable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"formula\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 22\n      }\n    }, \"Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)\"), count.length > 0 && count !== 0 ? count.slice(0, 4).map((count, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      id: `step-${index}`,\n      className: \"view-step\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 29\n      }\n    }, \"Step\", parseInt(`${index}`) + 1, \": \\xA0\", parseInt(`${index}`) + 1 === 1 ? url.data.step1 : parseInt(`${index}`) + 1 === 2 ? url.data.step2 : parseInt(`${index}`) + 1 === 3 ? url.data.step3 : parseInt(`${index}`) + 1 ? url.data.step3 : url.data.step5), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `fieldwrap view ${this.state.showfeild ? \"all\" : ''}`,\n      ref: this.targetRef,\n      \"data-value\": index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: `${index}`,\n      class: \"err-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: `action-button-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 29\n      }\n    }, parseInt(index) === 0 ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addQuestion(index),\n      className: 'btn btn-primary editor-plus ',\n      id: \"add-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 38\n      }\n    }, \"+\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDelete(index),\n      className: 'editor-plus sub btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 40\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addQuestion(index),\n      className: ' btn btn-primary editor-plus ',\n      id: \"add-btn1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 37\n      }\n    }, \"+\"), \" \"))))) : null), /*#__PURE__*/React.createElement(\"pre\", {\n      id: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default MultiMath;","map":{"version":3,"sources":["H:/Project/Technoduce/madhu/approach/approach/src/components/explore.jsx"],"names":["React","Component","MathFieldComponent","MathLive","validate","getResultObject","url","MultiMath","constructor","props","addQuestion","i","e","preventDefault","document","getElementById","style","display","pointerEvents","counter","state","count","concat","data","ast","get_index","setState","add","console","log","handleDelete","slice","handleEnable","condition","undefined","targetRef","createRef","smallerRef","greaterRef","num","q1","q2","showfeild","step","componentDidMount","componentDidUpdate","increquestion","question","question1","value","current","mathField","makeMathField","$setConfig","virtualKeyboardMode","virtualKeyboards","onContentDidChange","mathfield","latexToAST","$text","parseInt","innerHTML","labelload","number","label","color","target","value_index","getAttribute","onBlur","valid","getValue","r","element","textContent","feedback","postFeedback1","postFeedback2","b","d","className","ele","classList","contains","remove","errElement","applySuperscriptAsPower","mjs","mathJson","config","result","sup","window","math","expression","node","FunctionNode","mathJsonToMathjs","getMathjsArgs","Array","isArray","arg","index","length","push","getMathjsArgsWithSub","sub","n","bignumber","ConstantNode","sym","BUILT_IN_CONSTANTS","Ï€","pi","Ï„","tau","â„¯","â…‡","Ï•","phi","â…ˆ","â…‰","symbol","op","lhs","rhs","OPERATOR_FUNCTIONS","mod","args","OperatorNode","UNARY_OPERATOR_FUNCTIONS","fn","SymbolNode","fnName","randomReal","randomInteger","Gamma","Re","Im","binom","ucorner","lcorner","arccos","arcsin","arctan","arcosh","arsinh","group","render","geturl","loadquestion","ques_name","question0","map","step1","step2","step3","step5"],"mappings":"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","sourcesContent":[" import React, { Component } from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\nimport { validate, getResultObject } from './explore/hcf/validation';\r\n\r\nimport url from '../api/index.json';\r\n\r\nclass MultiMath extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ast = undefined;\r\n        this.get_index = undefined;\r\n        this.targetRef = React.createRef();\r\n        this.smallerRef = React.createRef();\r\n        this.greaterRef = React.createRef();\r\n        this.state = {\r\n            num: true,\r\n            count: [1],\r\n            add: true,\r\n            q1: 225,\r\n            q2: 135,\r\n            data: {},\r\n            showfeild: true,\r\n            step: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.handleEnable(false);\r\n    }\r\n    \r\n\r\n    componentDidUpdate() {\r\n\r\n        if(this.props.increquestion === 1){\r\n           this.setState({\r\n               q1: url.data.question.question1.data.q1\r\n           })\r\n        }\r\n\r\n       if(this.state.add){\r\n        const value =  this.state.num ? this.greaterRef.current: this.smallerRef.current\r\n        if (value) {\r\n            const mathField = MathLive.makeMathField(value);\r\n            mathField.$setConfig({\r\n              virtualKeyboardMode: 'onfocus',\r\n              virtualKeyboards: 'all',\r\n              onContentDidChange: mathfield => {\r\n                if(value === this.greaterRef.current){\r\n                    try {\r\n                        const num = MathLive.latexToAST(mathfield.$text());\r\n                        if(parseInt(num.num) === this.state.q1){\r\n                           console.log('qqq2');\r\n                          this.setState({num: !num})\r\n                          document.getElementById('greaterLabel').innerHTML = \"\";\r\n                         }\r\n                        else{\r\n                            const labelload = `Please enter the Greater number between ${this.state.q1} and ${this.state.q2}`\r\n                            document.getElementById('greaterLabel').innerHTML = \"Please enter the Greater number between 225 and 135\";\r\n                           }\r\n                    } catch (e) {\r\n                      /*  document.getElementById('output').innerHTML = 'ðŸ˜•';*/\r\n                    }\r\n                }\r\n                if(value === this.smallerRef.current){\r\n                    try {\r\n                        const number = MathLive.latexToAST(mathfield.$text());\r\n                        if(parseInt(number.num) === this.state.q2){\r\n                           console.log('qqq2');\r\n                           const label = document.getElementById('smallerLabel');\r\n                           label.innerHTML = \"Now the numbers are ordered in descending order.\";\r\n                           label.style.color = '#4CAF50';\r\n                            this.handleEnable(true);\r\n                           }\r\n                        else{\r\n                            const labelload = `Please enter the Smaller number between ${this.state.q1} and ${this.state.q2}`\r\n                            document.getElementById('smallerLabel').innerHTML = labelload;\r\n                            this.handleEnable(false);\r\n                           }\r\n                    } catch (e) {\r\n                      /*  document.getElementById('output').innerHTML = 'ðŸ˜•';*/\r\n                    }\r\n                }\r\n              }\r\n            })\r\n          }\r\n       }\r\n\r\n        const target = this.targetRef.current\r\n        console.log('target', target);\r\n\r\n        if (target && target === this.targetRef.current) {\r\n            const value_index = target.getAttribute('data-value');  //index value\r\n            this.get_index = value_index;\r\n            //console.log('value_index', value_index)                 //index value\r\n            console.log('target', target);\r\n            const mathField = MathLive.makeMathField(target);\r\n            console.log('mathField', mathField);\r\n              mathField.$setConfig({\r\n                virtualKeyboardMode: 'onfocus',\r\n                virtualKeyboards: 'all',\r\n                onBlur: mathfield => {\r\n                    try {\r\n                        const ast = MathLive.latexToAST(mathfield.$text());\r\n                        this.ast = ast;\r\n                        \r\n                        //validate HCF\r\n                        let valid = validate(ast, this.get_index, this.state);\r\n                        \r\n                        console.log(\"valid \", valid);\r\n                        \r\n                        //valid => true dont hide + and green in textbox \r\n                        //valid => otherwise hide +, red in textbox and show error message under textbox\r\n                        if (valid === true) { \r\n\r\n                           let getValue = getResultObject(this.ast, this.get_index, this.state);\r\n                            console.log('soole', getValue);\r\n                           if(getValue[this.get_index].r !== 0){\r\n                              var element =  document.getElementById(`${this.get_index}`);\r\n                              element.textContent = url.feedback.postFeedback1;\r\n                            } \r\n                            if(getValue[this.get_index].r === 0){\r\n                                var element =  document.getElementById(`${this.get_index}`);\r\n                              element.textContent = `${url.feedback.postFeedback2} ${this.state.q1} and ${this.state.q2} is ${getValue[this.get_index].b}`;\r\n                            }\r\n                           \r\n                            if(parseInt(this.get_index) === 0){\r\n                                var d = document.getElementById(\"add-btn\");\r\n                                d.className += \"show\";\r\n                            }\r\n                            if(parseInt(this.get_index) !== 0){\r\n                                \r\n                             var ele = document.getElementById(\"add-btn1\");\r\n                             if ( ele.classList.contains('show')){\r\n                                ele.classList.remove('show');\r\n                             }\r\n                               else{\r\n                                ele.className += \"show\";\r\n                                var d = document.getElementById(\"add-btn\");\r\n                                d.classList.remove('show');\r\n                               }\r\n                            }\r\n                           \r\n                        } else {\r\n                            var errElement = document.getElementById(`${this.get_index}`)\r\n                            errElement.innerHTML= valid; \r\n                            errElement.style.color ='#d80000';\r\n                         }\r\n\r\n                       /* document.getElementById(\r\n                            'output'\r\n                        ).innerHTML = JSON.stringify(\r\n                            mathJsonToMathjs(ast, {}).eval()\r\n                        ); */\r\n                        // document.getElementById('output').innerHTML = JSON.stringify(ast);\r\n                    } catch (e) {\r\n                      /*  document.getElementById('output').innerHTML = 'ðŸ˜•';*/\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        function applySuperscriptAsPower(mjs, mathJson, config) {\r\n            let result = mjs;\r\n            if (\r\n                typeof mathJson === 'object' &&\r\n                mathJson.sup !== undefined\r\n            ) {\r\n                result = new window.math.expression.node.FunctionNode(\r\n                    'pow',\r\n                    [result, mathJsonToMathjs(mathJson.sup, config)]\r\n                );\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function getMathjsArgs(mathJson, config) {\r\n            let result = [];\r\n            if (Array.isArray(mathJson.arg)) {\r\n                for (\r\n                    let index = 0;\r\n                    index < mathJson.arg.length;\r\n                    index++\r\n                ) {\r\n                    result.push(\r\n                        mathJsonToMathjs(mathJson.arg[index], config)\r\n                    );\r\n                }\r\n            } else {\r\n                result = [mathJsonToMathjs(mathJson.arg, config)];\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * Return an array of arguments, with the sub if present as the last argument.\r\n         */\r\n        function getMathjsArgsWithSub(mathJson, config) {\r\n            const result = getMathjsArgs(mathJson, config);\r\n            if (mathJson.sub !== undefined) {\r\n                result.push(mathJsonToMathjs(mathJson.sub, config));\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        /**\r\n         * Return a mathjs node tree corresponding to the MathjSON object\r\n         * @param {Object.<string,any>} mathJson\r\n         */\r\n        function mathJsonToMathjs(mathJson, config) {\r\n            let result;\r\n            if (mathJson === undefined) return undefined;\r\n\r\n            if (\r\n                typeof mathJson === 'number' ||\r\n                mathJson.num !== undefined\r\n            ) {\r\n                let n =\r\n                    typeof mathJson === 'number'\r\n                        ? mathJson\r\n                        : mathJson.num;\r\n\r\n                // Convert to BigNum if required\r\n                if (config.number === 'BigNumber')\r\n                    n = window.math.bignumber(n);\r\n\r\n                result = new window.math.expression.node.ConstantNode(\r\n                    n\r\n                );\r\n\r\n                // Apply the superscript as an operation\r\n                result = applySuperscriptAsPower(\r\n                    result,\r\n                    mathJson,\r\n                    config\r\n                );\r\n            } else if (\r\n                typeof mathJson === 'string' ||\r\n                mathJson.sym !== undefined\r\n            ) {\r\n                const BUILT_IN_CONSTANTS = {\r\n                    Ï€: window.math.pi,\r\n                    Ï„: window.math.tau, // GREEK SMALL LETTER TAU\r\n                    â„¯: window.math.e, // â„¯ SCRIPT SMALL E\r\n                    â…‡: window.math.e, // â…‡ DOUBLE-STRUCK ITALIC SMALL E\r\n                    e: window.math.e,\r\n                    Ï•: window.math.phi, //  GREEK SMALL LETTER PHI\r\n                    â…ˆ: window.math.i, // â…ˆ DOUBLE-STRUCK ITALIC SMALL I\r\n                    â…‰: window.math.i, // â…‰ DOUBLE-STRUCK ITALIC SMALL J\r\n                    i: window.math.i, //\r\n                };\r\n                const symbol =\r\n                    typeof mathJson === 'string'\r\n                        ? mathJson\r\n                        : mathJson.sym;\r\n                if (BUILT_IN_CONSTANTS[symbol]) {\r\n                    result = new window.math.expression.node.ConstantNode(\r\n                        BUILT_IN_CONSTANTS[symbol]\r\n                    );\r\n                }\r\n                result = applySuperscriptAsPower(\r\n                    result,\r\n                    mathJson,\r\n                    config\r\n                );\r\n            } else if (mathJson.op !== undefined) {\r\n                if (\r\n                    mathJson.lhs !== undefined &&\r\n                    mathJson.rhs !== undefined\r\n                ) {\r\n                    const OPERATOR_FUNCTIONS = {\r\n                        '+': 'add',\r\n                        '-': 'subtract',\r\n                        '*': 'multiply',\r\n                        '/': 'divide',\r\n                        // '.*': 'dotMultiply',\r\n                        // './': 'dotDivide',\r\n                        '%': 'mod',\r\n                        mod: 'mod',\r\n                    };\r\n                    const args = [\r\n                        mathJsonToMathjs(mathJson.lhs, config),\r\n                        mathJsonToMathjs(mathJson.rhs, config),\r\n                    ];\r\n                    result = new window.math.expression.node.OperatorNode(\r\n                        mathJson.op,\r\n                        OPERATOR_FUNCTIONS[mathJson.op],\r\n                        args\r\n                    );\r\n                } else if (mathJson.rhs !== undefined) {\r\n                    const UNARY_OPERATOR_FUNCTIONS = {\r\n                        '-': 'unaryMinus',\r\n                        '+': 'unaryPlus',\r\n                        // '~': 'bitNot',\r\n                        // 'not': 'not'\r\n                    };\r\n                    result = new window.math.expression.node.OperatorNode(\r\n                        mathJson.op,\r\n                        UNARY_OPERATOR_FUNCTIONS[mathJson.op],\r\n                        [mathJsonToMathjs(mathJson.rhs, config)]\r\n                    );\r\n                }\r\n            } else if (mathJson.fn) {\r\n                if (\r\n                    mathJson.fn === 'log' ||\r\n                    (mathJson.fn === 'ln' &&\r\n                        mathJson.fn.sub !== undefined)\r\n                ) {\r\n                    result = new window.math.expression.node.FunctionNode(\r\n                        'log',\r\n                        getMathjsArgsWithSub(mathJson, config)\r\n                    );\r\n                } else if (mathJson.fn === 'lb') {\r\n                    const args = getMathjsArgs(mathJson, config);\r\n                    args.push(\r\n                        new window.math.expression.node.ConstantNode(\r\n                            window.math.bignumber(2)\r\n                        )\r\n                    );\r\n                    result = new window.math.expression.node.FunctionNode(\r\n                        'log',\r\n                        args\r\n                    );\r\n                } else if (mathJson.fn === 'lg') {\r\n                    result = new window.math.expression.node.FunctionNode(\r\n                        new window.math.expression.node.SymbolNode(\r\n                            'log10'\r\n                        ),\r\n                        getMathjsArgs(mathJson, config)\r\n                    );\r\n                } else {\r\n                    const fnName =\r\n                        {\r\n                            '+': 'add',\r\n                            '-': 'subtract',\r\n                            '*': 'multiply',\r\n                            '/': 'divide',\r\n                            randomReal: 'random',\r\n                            randomInteger: 'randomInt',\r\n                            Gamma: 'gamma',\r\n                            Re: 're',\r\n                            Im: 'im',\r\n                            binom: 'composition',\r\n                            ucorner: 'ceil',\r\n                            lcorner: 'floor',\r\n                            arccos: 'acos',\r\n                            arcsin: 'asin',\r\n                            arctan: 'atan',\r\n                            arcosh: 'acosh',\r\n                            arsinh: 'asinh',\r\n                        }[mathJson.fn] || mathJson.fn;\r\n\r\n                    result = new window.math.expression.node.FunctionNode(\r\n                        fnName,\r\n                        getMathjsArgs(mathJson, config)\r\n                    );\r\n                }\r\n            } else if (mathJson.group) {\r\n                result = applySuperscriptAsPower(\r\n                    mathJsonToMathjs(mathJson.group, config),\r\n                    mathJson,\r\n                    config\r\n                );\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n    }\r\n    addQuestion = i => (e) => {\r\n        e.preventDefault();\r\n        document.getElementById(`action-button-${i}`).style.display = \"none\";\r\n        document.getElementById(`step-${i}`).style.pointerEvents = \"none\";\r\n        let counter = this.state.count.concat(['']);\r\n        let data = getResultObject(this.ast, this.get_index, this.state);\r\n    \r\n        this.setState({\r\n            count: counter,\r\n            add: false,\r\n            data: data\r\n           })\r\n        console.log('data', this.state.data)\r\n    }\r\n\r\n\r\n    handleDelete = i => e => {\r\n        e.preventDefault();\r\n        document.getElementById(`action-button-${i -1}`).style.display = \"block\";\r\n        document.getElementById(`action-button-${i -1}`).style.display = \"block\";\r\n        document.getElementById(`step-${i -1}`).style.pointerEvents = \"auto\";\r\n       console.log('elem')\r\n        let count = [\r\n          ...this.state.count.slice(0, i)\r\n         ]\r\n      console.log('couunter', count);\r\n      this.setState({\r\n        count\r\n      })\r\n    }\r\n    \r\n    handleEnable=(condition)=>{\r\n        if(condition) {\r\n            document.getElementById(\"enable\").style.display = \"block\";\r\n        } else {\r\n            document.getElementById(\"enable\").style.display = \"none\";\r\n        }\r\n    }\r\n    render() {\r\n        const { count } = this.state\r\n        console.log(\"this.state \", this.state);\r\n        const { increquestion } = this.props;\r\n        console.log('increquestion', increquestion);\r\n        const geturl = url.data.question;\r\n       const loadquestion = increquestion === 1 ? geturl.question1.ques_name :geturl.question0.ques_name\r\n    console.log('q222222222222222', this.state.q2);\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <h5> {loadquestion}</h5>\r\n                    <p className=\"editor-text\">Use Math editor for calculation </p>\r\n                    <div className=\"area-wrap\">\r\n                        <p>Enter the Greater number i.e., (a) as dividend and  the smaller number i.e (b) as divisor </p>\r\n                        <span className={'fieldwrap num-area great'} ref={this.greaterRef} ></span>\r\n                        <div className=\"grt-symbol\">></div>\r\n                        <span className={'fieldwrap num-area small'} ref={this.smallerRef}></span>\r\n                        <label id=\"greaterLabel\"></label>\r\n                        <label id=\"smallerLabel\" className=\"label-err\"></label>\r\n                    </div> \r\n                   \r\n                    <div id=\"enable\"> \r\n                     <h6 className=\"formula\">Note: Dividend (a) = divisor (b) x quotient (q) + remainder (r)</h6>\r\n                        {count.length > 0 && count !== 0 ? (count.slice(0, 4).map((count, index) => (\r\n                          <div key={index} id={`step-${index}`} className=\"view-step\">\r\n                            <p>Step{(parseInt(`${index}`) + 1)}: &nbsp;\r\n                             {(parseInt(`${index}`) + 1) === 1 ? url.data.step1 : (parseInt(`${index}`) + 1) === 2 ? url.data.step2 :(parseInt(`${index}`) + 1) === 3 ? url.data.step3 : (parseInt(`${index}`) + 1) ?url.data.step3 :url.data.step5 }</p>\r\n                             <div className=\"wrap-set\">\r\n                            <span className={`fieldwrap view ${this.state.showfeild ? \"all\" : ''}`} ref={this.targetRef} data-value={index}>{/*this.state.data[index]*/}</span>\r\n                            <span id={`${index}`} class=\"err-text\"></span>\r\n                            <span id={`action-button-${index}`}>\r\n                                { parseInt(index) === 0 ? \r\n                                    (<button onClick={this.addQuestion(index)} className={'btn btn-primary editor-plus '} id=\"add-btn\">+</button>) :\r\n                                    (<><button onClick={this.handleDelete(index)} className={'editor-plus sub btn btn-primary'}>-</button>\r\n                                    <button onClick={this.addQuestion(index)} className={' btn btn-primary editor-plus '} id=\"add-btn1\">+</button> </>)\r\n                                }   \r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                       ))) : null}\r\n                            </div>\r\n                    <pre id=\"output\"></pre>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default MultiMath;"]},"metadata":{},"sourceType":"module"}