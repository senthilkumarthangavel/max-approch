{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Madhu\\\\approach\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\Madhu\\\\approach\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Madhu\\\\approach\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Madhu\\\\approach\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Madhu\\\\approach\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{MathFieldComponent}from'react-mathlive';import MathLive from'mathlive';var MultiMath=/*#__PURE__*/function(_Component){_inherits(MultiMath,_Component);var _super=_createSuper(MultiMath);function MultiMath(){var _this;_classCallCheck(this,MultiMath);_this=_super.call(this);_this.addQuestion=function(){var counter=_this.state.count.concat(['']);_this.setState({count:counter,add:!_this.state.add});};_this.handleDelete=function(i){return function(e){e.preventDefault();var newarr=[].concat(_toConsumableArray(_this.state.count.slice(0,i)),_toConsumableArray(_this.state.count.slice(i+1)));_this.setState({count:newarr});};};_this.targetRef=React.createRef();_this.state={count:[1],add:false};return _this;}_createClass(MultiMath,[{key:\"handleClick\",value:function handleClick(e){var target=e.target;if(target){var targete=MathLive.makeMathField(target,{virtualKeyboardMode:'manual',virtualKeyboards:'all',onContentDidChange:function onContentDidChange(target){try{var ast=MathLive.latexToAST(targete.$text());console.log('ast',ast);document.getElementById('output').innerHTML=JSON.stringify(mathJsonToMathjs(ast,{}).eval());// document.getElementById('output').innerHTML = JSON.stringify(ast);\n}catch(e){document.getElementById('output').innerHTML='ðŸ˜•';}}});}function applySuperscriptAsPower(mjs,mathJson,config){var result=mjs;if(typeof mathJson==='object'&&mathJson.sup!==undefined){result=new window.math.expression.node.FunctionNode('pow',[result,mathJsonToMathjs(mathJson.sup,config)]);}return result;}function getMathjsArgs(mathJson,config){var result=[];if(Array.isArray(mathJson.arg)){for(var index=0;index<mathJson.arg.length;index++){result.push(mathJsonToMathjs(mathJson.arg[index],config));}}else{result=[mathJsonToMathjs(mathJson.arg,config)];}return result;}/**\r\n * Return an array of arguments, with the sub if present as the last argument.\r\n */function getMathjsArgsWithSub(mathJson,config){var result=getMathjsArgs(mathJson,config);if(mathJson.sub!==undefined){result.push(mathJsonToMathjs(mathJson.sub,config));}return result;}/**\r\n * Return a mathjs node tree corresponding to the MathjSON object\r\n * @param {Object.<string,any>} mathJson\r\n */function mathJsonToMathjs(mathJson,config){var result;if(mathJson===undefined)return undefined;if(typeof mathJson==='number'||mathJson.num!==undefined){var n=typeof mathJson==='number'?mathJson:mathJson.num;// Convert to BigNum if required\nif(config.number==='BigNumber')n=window.math.bignumber(n);result=new window.math.expression.node.ConstantNode(n);// Apply the superscript as an operation\nresult=applySuperscriptAsPower(result,mathJson,config);}else if(typeof mathJson==='string'||mathJson.sym!==undefined){var BUILT_IN_CONSTANTS={Ï€:window.math.pi,Ï„:window.math.tau,// GREEK SMALL LETTER TAU\nâ„¯:window.math.e,// â„¯ SCRIPT SMALL E\nâ…‡:window.math.e,// â…‡ DOUBLE-STRUCK ITALIC SMALL E\ne:window.math.e,Ï•:window.math.phi,//  GREEK SMALL LETTER PHI\nâ…ˆ:window.math.i,// â…ˆ DOUBLE-STRUCK ITALIC SMALL I\nâ…‰:window.math.i,// â…‰ DOUBLE-STRUCK ITALIC SMALL J\ni:window.math.i//\n};var symbol=typeof mathJson==='string'?mathJson:mathJson.sym;if(BUILT_IN_CONSTANTS[symbol]){result=new window.math.expression.node.ConstantNode(BUILT_IN_CONSTANTS[symbol]);}result=applySuperscriptAsPower(result,mathJson,config);}else if(mathJson.op!==undefined){if(mathJson.lhs!==undefined&&mathJson.rhs!==undefined){var OPERATOR_FUNCTIONS={'+':'add','-':'subtract','*':'multiply','/':'divide',// '.*': 'dotMultiply',\n// './': 'dotDivide',\n'%':'mod',mod:'mod'};var args=[mathJsonToMathjs(mathJson.lhs,config),mathJsonToMathjs(mathJson.rhs,config)];result=new window.math.expression.node.OperatorNode(mathJson.op,OPERATOR_FUNCTIONS[mathJson.op],args);}else if(mathJson.rhs!==undefined){var UNARY_OPERATOR_FUNCTIONS={'-':'unaryMinus','+':'unaryPlus'// '~': 'bitNot',\n// 'not': 'not'\n};result=new window.math.expression.node.OperatorNode(mathJson.op,UNARY_OPERATOR_FUNCTIONS[mathJson.op],[mathJsonToMathjs(mathJson.rhs,config)]);}}else if(mathJson.fn){if(mathJson.fn==='log'||mathJson.fn==='ln'&&mathJson.fn.sub!==undefined){result=new window.math.expression.node.FunctionNode('log',getMathjsArgsWithSub(mathJson,config));}else if(mathJson.fn==='lb'){var _args=getMathjsArgs(mathJson,config);_args.push(new window.math.expression.node.ConstantNode(window.math.bignumber(2)));result=new window.math.expression.node.FunctionNode('log',_args);}else if(mathJson.fn==='lg'){result=new window.math.expression.node.FunctionNode(new window.math.expression.node.SymbolNode('log10'),getMathjsArgs(mathJson,config));}else{var fnName={'+':'add','-':'subtract','*':'multiply','/':'divide',randomReal:'random',randomInteger:'randomInt',Gamma:'gamma',Re:'re',Im:'im',binom:'composition',ucorner:'ceil',lcorner:'floor',arccos:'acos',arcsin:'asin',arctan:'atan',arcosh:'acosh',arsinh:'         asinh'}[mathJson.fn]||mathJson.fn;result=new window.math.expression.node.FunctionNode(fnName,getMathjsArgs(mathJson,config));}}else if(mathJson.group){result=applySuperscriptAsPower(mathJsonToMathjs(mathJson.group,config),mathJson,config);}return result;}}},{key:\"render\",value:function render(){var _this2=this;var count=this.state.count;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"p\",null,\"Use Math editor for calculation \"),count.length>0&&count!==0?count.slice(0,4).map(function(count,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"wrap-set\"},/*#__PURE__*/React.createElement(\"p\",null,\"Step:\\xA0\",parseInt(\"\".concat(index))+1),/*#__PURE__*/React.createElement(\"span\",{className:'fieldwrap',ref:_this2.targetRef,onClick:function onClick(e){return _this2.handleClick(e);}}),parseInt(index)+1===4?/*#__PURE__*/React.createElement(\"button\",{onClick:_this2.handleDelete(index),className:'editor-plus btn btn-primary'},\"-\"):parseInt(index)+1===1?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"button\",{onClick:_this2.addQuestion,className:'editor-plus btn btn-primary',ref:_this2.addRef},\"+\"),\" \"):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"button\",{onClick:_this2.handleDelete(index),className:'editor-plus sub btn btn-primary'},\"-\"),/*#__PURE__*/React.createElement(\"button\",{onClick:_this2.addQuestion,className:'editor-plus btn btn-primary'},\"+\"),\" \"));}):null,/*#__PURE__*/React.createElement(\"pre\",{id:\"output\"})));}}]);return MultiMath;}(Component);export default MultiMath;","map":{"version":3,"sources":["D:/Madhu/approach/src/components/explore.jsx"],"names":["React","Component","MathFieldComponent","MathLive","MultiMath","addQuestion","counter","state","count","concat","setState","add","handleDelete","i","e","preventDefault","newarr","slice","targetRef","createRef","target","targete","makeMathField","virtualKeyboardMode","virtualKeyboards","onContentDidChange","ast","latexToAST","$text","console","log","document","getElementById","innerHTML","JSON","stringify","mathJsonToMathjs","eval","applySuperscriptAsPower","mjs","mathJson","config","result","sup","undefined","window","math","expression","node","FunctionNode","getMathjsArgs","Array","isArray","arg","index","length","push","getMathjsArgsWithSub","sub","num","n","number","bignumber","ConstantNode","sym","BUILT_IN_CONSTANTS","Ï€","pi","Ï„","tau","â„¯","â…‡","Ï•","phi","â…ˆ","â…‰","symbol","op","lhs","rhs","OPERATOR_FUNCTIONS","mod","args","OperatorNode","UNARY_OPERATOR_FUNCTIONS","fn","SymbolNode","fnName","randomReal","randomInteger","Gamma","Re","Im","binom","ucorner","lcorner","arccos","arcsin","arctan","arcosh","arsinh","group","map","parseInt","handleClick","addRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\n\r\n\r\nclass MultiMath extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.targetRef = React.createRef();\r\n        this.state={\r\n            count: [1],\r\n            add: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleClick(e){\r\n     \r\n        const target = e.target;\r\n     \r\n        if (target) {\r\n            const targete =  MathLive.makeMathField(target, {\r\n            \r\n                virtualKeyboardMode: 'manual',\r\n                virtualKeyboards: 'all',\r\n                onContentDidChange: (target) => {\r\n                    try {\r\n                        const ast = MathLive.latexToAST(targete.$text());\r\n                        console.log('ast', ast);\r\n                        document.getElementById(\r\n                            'output'\r\n                        ).innerHTML = JSON.stringify(\r\n                            mathJsonToMathjs(ast, {}).eval()\r\n                        );\r\n                        // document.getElementById('output').innerHTML = JSON.stringify(ast);\r\n                    } catch (e) {\r\n                        document.getElementById('output').innerHTML = 'ðŸ˜•';\r\n                    }\r\n                },\r\n            })\r\n    \r\n      }\r\n      function applySuperscriptAsPower(mjs, mathJson, config) {\r\n        let result = mjs;\r\n        if (\r\n            typeof mathJson === 'object' &&\r\n            mathJson.sup !== undefined\r\n        ) {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'pow',\r\n                [result, mathJsonToMathjs(mathJson.sup, config)]\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    function getMathjsArgs(mathJson, config) {\r\n        let result = [];\r\n        if (Array.isArray(mathJson.arg)) {\r\n            for (\r\n                let index = 0;\r\n                index < mathJson.arg.length;\r\n                index++\r\n            ) {\r\n                result.push(\r\n                    mathJsonToMathjs(mathJson.arg[index], config)\r\n                );\r\n            }\r\n        } else {\r\n            result = [mathJsonToMathjs(mathJson.arg, config)];\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n * Return an array of arguments, with the sub if present as the last argument.\r\n */\r\nfunction getMathjsArgsWithSub(mathJson, config) {\r\n    const result = getMathjsArgs(mathJson, config);\r\n    if (mathJson.sub !== undefined) {\r\n        result.push(mathJsonToMathjs(mathJson.sub, config));\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return a mathjs node tree corresponding to the MathjSON object\r\n * @param {Object.<string,any>} mathJson\r\n */\r\nfunction mathJsonToMathjs(mathJson, config) {\r\n    let result;\r\n    if (mathJson === undefined) return undefined;\r\n\r\n    if (\r\n        typeof mathJson === 'number' ||\r\n        mathJson.num !== undefined\r\n    ) {\r\n        let n =\r\n            typeof mathJson === 'number'\r\n                ? mathJson\r\n                : mathJson.num;\r\n\r\n        // Convert to BigNum if required\r\n        if (config.number === 'BigNumber')\r\n            n = window.math.bignumber(n);\r\n\r\n        result = new window.math.expression.node.ConstantNode(\r\n            n\r\n        );\r\n\r\n        // Apply the superscript as an operation\r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (\r\n        typeof mathJson === 'string' ||\r\n        mathJson.sym !== undefined\r\n    ) {\r\n        const BUILT_IN_CONSTANTS = {\r\n            Ï€: window.math.pi,\r\n            Ï„: window.math.tau, // GREEK SMALL LETTER TAU\r\n            â„¯: window.math.e, // â„¯ SCRIPT SMALL E\r\n            â…‡: window.math.e, // â…‡ DOUBLE-STRUCK ITALIC SMALL E\r\n            e: window.math.e,\r\n            Ï•: window.math.phi, //  GREEK SMALL LETTER PHI\r\n            â…ˆ: window.math.i, // â…ˆ DOUBLE-STRUCK ITALIC SMALL I\r\n            â…‰: window.math.i, // â…‰ DOUBLE-STRUCK ITALIC SMALL J\r\n            i: window.math.i, //\r\n        };\r\n        const symbol =\r\n            typeof mathJson === 'string'\r\n                ? mathJson\r\n                : mathJson.sym;\r\n        if (BUILT_IN_CONSTANTS[symbol]) {\r\n            result = new window.math.expression.node.ConstantNode(\r\n                BUILT_IN_CONSTANTS[symbol]\r\n            );\r\n        } \r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (mathJson.op !== undefined) {\r\n        if (\r\n            mathJson.lhs !== undefined &&\r\n            mathJson.rhs !== undefined\r\n        ) {\r\n            const OPERATOR_FUNCTIONS = {\r\n                '+': 'add',\r\n                '-': 'subtract',\r\n                '*': 'multiply',\r\n                '/': 'divide',\r\n                // '.*': 'dotMultiply',\r\n                // './': 'dotDivide',\r\n                '%': 'mod',\r\n                mod: 'mod',\r\n            };\r\n            const args = [\r\n                mathJsonToMathjs(mathJson.lhs, config),\r\n                mathJsonToMathjs(mathJson.rhs, config),\r\n            ];\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                OPERATOR_FUNCTIONS[mathJson.op],\r\n                args\r\n            );\r\n        } else if (mathJson.rhs !== undefined) {\r\n            const UNARY_OPERATOR_FUNCTIONS = {\r\n                '-': 'unaryMinus',\r\n                '+': 'unaryPlus',\r\n                // '~': 'bitNot',\r\n                // 'not': 'not'\r\n            };\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                UNARY_OPERATOR_FUNCTIONS[mathJson.op],\r\n                [mathJsonToMathjs(mathJson.rhs, config)]\r\n            );\r\n        }\r\n    } else if (mathJson.fn) {\r\n        if (\r\n            mathJson.fn === 'log' ||\r\n            (mathJson.fn === 'ln' &&\r\n                mathJson.fn.sub !== undefined)\r\n        ) {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                getMathjsArgsWithSub(mathJson, config)\r\n            );\r\n        } else if (mathJson.fn === 'lb') {\r\n            const args = getMathjsArgs(mathJson, config);\r\n            args.push(\r\n                new window.math.expression.node.ConstantNode(\r\n                    window.math.bignumber(2)\r\n                )\r\n            );\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                args\r\n            );\r\n        } else if (mathJson.fn === 'lg') {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                new window.math.expression.node.SymbolNode(\r\n                    'log10'\r\n                ),\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        } else {\r\n            const fnName =\r\n                {\r\n                    '+': 'add',\r\n                    '-': 'subtract',\r\n                    '*': 'multiply',\r\n                    '/': 'divide',\r\n                    randomReal: 'random',\r\n                    randomInteger: 'randomInt',\r\n                    Gamma: 'gamma',\r\n                    Re: 're',\r\n                    Im: 'im',\r\n                    binom: 'composition',\r\n                    ucorner: 'ceil',\r\n                    lcorner: 'floor',\r\n                    arccos: 'acos',\r\n                    arcsin: 'asin',\r\n                    arctan: 'atan',\r\n                    arcosh: 'acosh',\r\n                    arsinh: '         asinh',\r\n                }[mathJson.fn] || mathJson.fn;\r\n\r\n            result = new window.math.expression.node.FunctionNode(\r\n                fnName,\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        }\r\n    } else if (mathJson.group) {\r\n        result = applySuperscriptAsPower(\r\n            mathJsonToMathjs(mathJson.group, config),\r\n            mathJson,\r\n            config\r\n        );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n    \r\n\r\n    addQuestion = () =>{\r\n        let counter = this.state.count.concat([''])\r\n        this.setState({\r\n            count: counter,\r\n            add: (!this.state.add)\r\n        })\r\n       \r\n        \r\n    }\r\n\r\n     handleDelete = i => e => {\r\n        e.preventDefault()\r\n        let newarr = [\r\n          ...this.state.count.slice(0, i),\r\n          ...this.state.count.slice(i + 1)\r\n        ]\r\n        this.setState({\r\n             count: newarr\r\n        })\r\n      }\r\n\r\n    render(){\r\n         const { count } = this.state\r\n         \r\n        return(\r\n            <div>\r\n          \r\n      <div className=\"App\">\r\n          <p>Use Math editor for calculation </p>\r\n      { count.length > 0 && count !== 0 ? (count.slice(0, 4).map((count, index ) => (\r\n        \r\n          <div key={index} className=\"wrap-set\">\r\n        <p>Step:&nbsp;{parseInt(`${index}`) + 1}</p>\r\n         <span className={'fieldwrap'} ref={this.targetRef} onClick={(e)=>this.handleClick(e)}></span>  \r\n         \r\n         {parseInt(index) + 1 ===  4 ?  <button onClick={this.handleDelete(index)} className={'editor-plus btn btn-primary'}>-</button>  :\r\n\r\n        parseInt(index) + 1 ===  1 ?  <><button onClick={this.addQuestion} className={'editor-plus btn btn-primary'} ref={this.addRef}>+</button> </>: \r\n          <><button onClick={this.handleDelete(index)} className={'editor-plus sub btn btn-primary'}>-</button>\r\n         <button onClick={this.addQuestion} className={'editor-plus btn btn-primary'}>+</button> </> }\r\n          </div>\r\n        ))  ) : null }\r\n     \r\n         <pre id=\"output\"></pre>\r\n\r\n      </div> \r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n     \r\n}\r\nexport default MultiMath;"]},"metadata":{},"sourceType":"module"}