{"ast":null,"code":"import _slicedToArray from\"D:\\\\Madhu\\\\approach\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{MathFieldComponent}from'react-mathlive';import MathLive from'mathlive';import{useState,useEffect,useRef}from'react';var MultiMath=function MultiMath(){var _React$useState=React.useState([1]),_React$useState2=_slicedToArray(_React$useState,2),count=_React$useState2[0],setCount=_React$useState2[1];var handleChange=function handleChange(e){var target=e.target;console.log('target',target);if(target){console.log('target',target);var mathField=MathLive.makeMathField(target);console.log('mathField',mathField);mathField.$setConfig({virtualKeyboardMode:'onfocus',virtualKeyboards:'all',onContentDidChange:function onContentDidChange(mathfield){try{var ast=MathLive.latexToAST(mathfield.$text());document.getElementById('output').innerHTML=JSON.stringify(mathJsonToMathjs(ast,{}).eval());// document.getElementById('output').innerHTML = JSON.stringify(ast);\n}catch(e){document.getElementById('output').innerHTML='ðŸ˜•';}}});}};var addQuestion=function addQuestion(){var counter=count.concat(['']);setCount(counter);console.log(count);};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"explore-wrap\"},/*#__PURE__*/React.createElement(\"button\",{onClick:addQuestion,className:\"btn btn-primary\"},\"Plus\"),count.map(function(question,index){return/*#__PURE__*/React.createElement(\"div\",{key:index},/*#__PURE__*/React.createElement(\"span\",{onClick:handleChange,className:\"fieldset\"}));}),/*#__PURE__*/React.createElement(\"pre\",{id:\"output\"})));};function applySuperscriptAsPower(mjs,mathJson,config){var result=mjs;if(typeof mathJson==='object'&&mathJson.sup!==undefined){result=new window.math.expression.node.FunctionNode('pow',[result,mathJsonToMathjs(mathJson.sup,config)]);}return result;}function getMathjsArgs(mathJson,config){var result=[];if(Array.isArray(mathJson.arg)){for(var index=0;index<mathJson.arg.length;index++){result.push(mathJsonToMathjs(mathJson.arg[index],config));}}else{result=[mathJsonToMathjs(mathJson.arg,config)];}return result;}/**\r\n * Return an array of arguments, with the sub if present as the last argument.\r\n */function getMathjsArgsWithSub(mathJson,config){var result=getMathjsArgs(mathJson,config);if(mathJson.sub!==undefined){result.push(mathJsonToMathjs(mathJson.sub,config));}return result;}/**\r\n * Return a mathjs node tree corresponding to the MathjSON object\r\n * @param {Object.<string,any>} mathJson\r\n */function mathJsonToMathjs(mathJson,config){var result;if(mathJson===undefined)return undefined;if(typeof mathJson==='number'||mathJson.num!==undefined){var n=typeof mathJson==='number'?mathJson:mathJson.num;// Convert to BigNum if required\nif(config.number==='BigNumber')n=window.math.bignumber(n);result=new window.math.expression.node.ConstantNode(n);// Apply the superscript as an operation\nresult=applySuperscriptAsPower(result,mathJson,config);}else if(typeof mathJson==='string'||mathJson.sym!==undefined){var BUILT_IN_CONSTANTS={Ï€:window.math.pi,Ï„:window.math.tau,// GREEK SMALL LETTER TAU\nâ„¯:window.math.e,// â„¯ SCRIPT SMALL E\nâ…‡:window.math.e,// â…‡ DOUBLE-STRUCK ITALIC SMALL E\ne:window.math.e,Ï•:window.math.phi,//  GREEK SMALL LETTER PHI\nâ…ˆ:window.math.i,// â…ˆ DOUBLE-STRUCK ITALIC SMALL I\nâ…‰:window.math.i,// â…‰ DOUBLE-STRUCK ITALIC SMALL J\ni:window.math.i//\n};var symbol=typeof mathJson==='string'?mathJson:mathJson.sym;if(BUILT_IN_CONSTANTS[symbol]){result=new window.math.expression.node.ConstantNode(BUILT_IN_CONSTANTS[symbol]);}result=applySuperscriptAsPower(result,mathJson,config);}else if(mathJson.op!==undefined){if(mathJson.lhs!==undefined&&mathJson.rhs!==undefined){var OPERATOR_FUNCTIONS={'+':'add','-':'subtract','*':'multiply','/':'divide',// '.*': 'dotMultiply',\n// './': 'dotDivide',\n'%':'mod',mod:'mod'};var args=[mathJsonToMathjs(mathJson.lhs,config),mathJsonToMathjs(mathJson.rhs,config)];result=new window.math.expression.node.OperatorNode(mathJson.op,OPERATOR_FUNCTIONS[mathJson.op],args);}else if(mathJson.rhs!==undefined){var UNARY_OPERATOR_FUNCTIONS={'-':'unaryMinus','+':'unaryPlus'// '~': 'bitNot',\n// 'not': 'not'\n};result=new window.math.expression.node.OperatorNode(mathJson.op,UNARY_OPERATOR_FUNCTIONS[mathJson.op],[mathJsonToMathjs(mathJson.rhs,config)]);}}else if(mathJson.fn){if(mathJson.fn==='log'||mathJson.fn==='ln'&&mathJson.fn.sub!==undefined){result=new window.math.expression.node.FunctionNode('log',getMathjsArgsWithSub(mathJson,config));}else if(mathJson.fn==='lb'){var _args=getMathjsArgs(mathJson,config);_args.push(new window.math.expression.node.ConstantNode(window.math.bignumber(2)));result=new window.math.expression.node.FunctionNode('log',_args);}else if(mathJson.fn==='lg'){result=new window.math.expression.node.FunctionNode(new window.math.expression.node.SymbolNode('log10'),getMathjsArgs(mathJson,config));}else{var fnName={'+':'add','-':'subtract','*':'multiply','/':'divide',randomReal:'random',randomInteger:'randomInt',Gamma:'gamma',Re:'re',Im:'im',binom:'composition',ucorner:'ceil',lcorner:'floor',arccos:'acos',arcsin:'asin',arctan:'atan',arcosh:'acosh',arsinh:'         asinh'}[mathJson.fn]||mathJson.fn;result=new window.math.expression.node.FunctionNode(fnName,getMathjsArgs(mathJson,config));}}else if(mathJson.group){result=applySuperscriptAsPower(mathJsonToMathjs(mathJson.group,config),mathJson,config);}return result;}export default MultiMath;","map":{"version":3,"sources":["D:/Madhu/approach/src/components/explore.jsx"],"names":["React","MathFieldComponent","MathLive","useState","useEffect","useRef","MultiMath","count","setCount","handleChange","e","target","console","log","mathField","makeMathField","$setConfig","virtualKeyboardMode","virtualKeyboards","onContentDidChange","mathfield","ast","latexToAST","$text","document","getElementById","innerHTML","JSON","stringify","mathJsonToMathjs","eval","addQuestion","counter","concat","map","question","index","applySuperscriptAsPower","mjs","mathJson","config","result","sup","undefined","window","math","expression","node","FunctionNode","getMathjsArgs","Array","isArray","arg","length","push","getMathjsArgsWithSub","sub","num","n","number","bignumber","ConstantNode","sym","BUILT_IN_CONSTANTS","Ï€","pi","Ï„","tau","â„¯","â…‡","Ï•","phi","â…ˆ","i","â…‰","symbol","op","lhs","rhs","OPERATOR_FUNCTIONS","mod","args","OperatorNode","UNARY_OPERATOR_FUNCTIONS","fn","SymbolNode","fnName","randomReal","randomInteger","Gamma","Re","Im","binom","ucorner","lcorner","arccos","arcsin","arctan","arcosh","arsinh","group"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { MathFieldComponent } from 'react-mathlive';\r\nimport MathLive from 'mathlive';\r\nimport{ useState, useEffect, useRef } from 'react';\r\n\r\nconst MultiMath = () => {\r\n    const [count, setCount] = React.useState([1]);\r\n  \r\n\r\n const handleChange= (e) => {\r\n       const target = e.target;\r\n       console.log('target', target);\r\n       if (target) {\r\n        console.log('target', target);\r\n      const mathField = MathLive.makeMathField(target);\r\n      console.log('mathField', mathField);\r\n\r\n      mathField.$setConfig({\r\n        virtualKeyboardMode: 'onfocus',\r\n        virtualKeyboards: 'all',\r\n        onContentDidChange: mathfield => {\r\n          try {\r\n              const ast = MathLive.latexToAST(mathfield.$text());\r\n              document.getElementById(\r\n                  'output'\r\n              ).innerHTML = JSON.stringify(\r\n                  mathJsonToMathjs(ast, {}).eval()\r\n              );\r\n              // document.getElementById('output').innerHTML = JSON.stringify(ast);\r\n          } catch (e) {\r\n              document.getElementById('output').innerHTML = 'ðŸ˜•';\r\n          }\r\n        },\r\n      })\r\n    }\r\n    }\r\n\r\n\r\n\r\n    const addQuestion = () =>{\r\n        let counter = count.concat([''])\r\n        setCount(counter)\r\n        console.log(count)\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"explore-wrap\">\r\n        <button onClick={addQuestion} className=\"btn btn-primary\">Plus</button>\r\n        {count.map((question, index) => (\r\n          <div key={index}>\r\n          <span onClick={ handleChange} className=\"fieldset\"></span>\r\n          </div>\r\n           ))}\r\n     \r\n         <pre id=\"output\"></pre>\r\n        \r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n  \r\nfunction applySuperscriptAsPower(mjs, mathJson, config) {\r\n    let result = mjs;\r\n    if (\r\n        typeof mathJson === 'object' &&\r\n        mathJson.sup !== undefined\r\n    ) {\r\n        result = new window.math.expression.node.FunctionNode(\r\n            'pow',\r\n            [result, mathJsonToMathjs(mathJson.sup, config)]\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getMathjsArgs(mathJson, config) {\r\n    let result = [];\r\n    if (Array.isArray(mathJson.arg)) {\r\n        for (\r\n            let index = 0;\r\n            index < mathJson.arg.length;\r\n            index++\r\n        ) {\r\n            result.push(\r\n                mathJsonToMathjs(mathJson.arg[index], config)\r\n            );\r\n        }\r\n    } else {\r\n        result = [mathJsonToMathjs(mathJson.arg, config)];\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return an array of arguments, with the sub if present as the last argument.\r\n */\r\nfunction getMathjsArgsWithSub(mathJson, config) {\r\n    const result = getMathjsArgs(mathJson, config);\r\n    if (mathJson.sub !== undefined) {\r\n        result.push(mathJsonToMathjs(mathJson.sub, config));\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return a mathjs node tree corresponding to the MathjSON object\r\n * @param {Object.<string,any>} mathJson\r\n */\r\nfunction mathJsonToMathjs(mathJson, config) {\r\n    let result;\r\n    if (mathJson === undefined) return undefined;\r\n\r\n    if (\r\n        typeof mathJson === 'number' ||\r\n        mathJson.num !== undefined\r\n    ) {\r\n        let n =\r\n            typeof mathJson === 'number'\r\n                ? mathJson\r\n                : mathJson.num;\r\n\r\n        // Convert to BigNum if required\r\n        if (config.number === 'BigNumber')\r\n            n = window.math.bignumber(n);\r\n\r\n        result = new window.math.expression.node.ConstantNode(\r\n            n\r\n        );\r\n\r\n        // Apply the superscript as an operation\r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (\r\n        typeof mathJson === 'string' ||\r\n        mathJson.sym !== undefined\r\n    ) {\r\n        const BUILT_IN_CONSTANTS = {\r\n            Ï€: window.math.pi,\r\n            Ï„: window.math.tau, // GREEK SMALL LETTER TAU\r\n            â„¯: window.math.e, // â„¯ SCRIPT SMALL E\r\n            â…‡: window.math.e, // â…‡ DOUBLE-STRUCK ITALIC SMALL E\r\n            e: window.math.e,\r\n            Ï•: window.math.phi, //  GREEK SMALL LETTER PHI\r\n            â…ˆ: window.math.i, // â…ˆ DOUBLE-STRUCK ITALIC SMALL I\r\n            â…‰: window.math.i, // â…‰ DOUBLE-STRUCK ITALIC SMALL J\r\n            i: window.math.i, //\r\n        };\r\n        const symbol =\r\n            typeof mathJson === 'string'\r\n                ? mathJson\r\n                : mathJson.sym;\r\n        if (BUILT_IN_CONSTANTS[symbol]) {\r\n            result = new window.math.expression.node.ConstantNode(\r\n                BUILT_IN_CONSTANTS[symbol]\r\n            );\r\n        } \r\n        result = applySuperscriptAsPower(\r\n            result,\r\n            mathJson,\r\n            config\r\n        );\r\n    } else if (mathJson.op !== undefined) {\r\n        if (\r\n            mathJson.lhs !== undefined &&\r\n            mathJson.rhs !== undefined\r\n        ) {\r\n            const OPERATOR_FUNCTIONS = {\r\n                '+': 'add',\r\n                '-': 'subtract',\r\n                '*': 'multiply',\r\n                '/': 'divide',\r\n                // '.*': 'dotMultiply',\r\n                // './': 'dotDivide',\r\n                '%': 'mod',\r\n                mod: 'mod',\r\n            };\r\n            const args = [\r\n                mathJsonToMathjs(mathJson.lhs, config),\r\n                mathJsonToMathjs(mathJson.rhs, config),\r\n            ];\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                OPERATOR_FUNCTIONS[mathJson.op],\r\n                args\r\n            );\r\n        } else if (mathJson.rhs !== undefined) {\r\n            const UNARY_OPERATOR_FUNCTIONS = {\r\n                '-': 'unaryMinus',\r\n                '+': 'unaryPlus',\r\n                // '~': 'bitNot',\r\n                // 'not': 'not'\r\n            };\r\n            result = new window.math.expression.node.OperatorNode(\r\n                mathJson.op,\r\n                UNARY_OPERATOR_FUNCTIONS[mathJson.op],\r\n                [mathJsonToMathjs(mathJson.rhs, config)]\r\n            );\r\n        }\r\n    } else if (mathJson.fn) {\r\n        if (\r\n            mathJson.fn === 'log' ||\r\n            (mathJson.fn === 'ln' &&\r\n                mathJson.fn.sub !== undefined)\r\n        ) {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                getMathjsArgsWithSub(mathJson, config)\r\n            );\r\n        } else if (mathJson.fn === 'lb') {\r\n            const args = getMathjsArgs(mathJson, config);\r\n            args.push(\r\n                new window.math.expression.node.ConstantNode(\r\n                    window.math.bignumber(2)\r\n                )\r\n            );\r\n            result = new window.math.expression.node.FunctionNode(\r\n                'log',\r\n                args\r\n            );\r\n        } else if (mathJson.fn === 'lg') {\r\n            result = new window.math.expression.node.FunctionNode(\r\n                new window.math.expression.node.SymbolNode(\r\n                    'log10'\r\n                ),\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        } else {\r\n            const fnName =\r\n                {\r\n                    '+': 'add',\r\n                    '-': 'subtract',\r\n                    '*': 'multiply',\r\n                    '/': 'divide',\r\n                    randomReal: 'random',\r\n                    randomInteger: 'randomInt',\r\n                    Gamma: 'gamma',\r\n                    Re: 're',\r\n                    Im: 'im',\r\n                    binom: 'composition',\r\n                    ucorner: 'ceil',\r\n                    lcorner: 'floor',\r\n                    arccos: 'acos',\r\n                    arcsin: 'asin',\r\n                    arctan: 'atan',\r\n                    arcosh: 'acosh',\r\n                    arsinh: '         asinh',\r\n                }[mathJson.fn] || mathJson.fn;\r\n\r\n            result = new window.math.expression.node.FunctionNode(\r\n                fnName,\r\n                getMathjsArgs(mathJson, config)\r\n            );\r\n        }\r\n    } else if (mathJson.group) {\r\n        result = applySuperscriptAsPower(\r\n            mathJsonToMathjs(mathJson.group, config),\r\n            mathJson,\r\n            config\r\n        );\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport default MultiMath;"]},"metadata":{},"sourceType":"module"}